<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>JamesLiu&#39;BLOG</title>
  <icon>https://www.gravatar.com/avatar/8f330819b638371b33b23e4413dec76b</icon>
  <subtitle>Keep at it, and you will succeed!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.jmideas.cn/"/>
  <updated>2018-07-25T13:40:14.421Z</updated>
  <id>http://www.jmideas.cn/</id>
  
  <author>
    <name>JamesLiu</name>
    <email>JamesLiu.storm@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Phalapi框架微信小程序扩展</title>
    <link href="http://www.jmideas.cn/2018/07/25/Phalapi%E6%A1%86%E6%9E%B6%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%89%A9%E5%B1%95/"/>
    <id>http://www.jmideas.cn/2018/07/25/Phalapi框架微信小程序扩展/</id>
    <published>2018-07-25T13:29:28.000Z</published>
    <updated>2018-07-25T13:40:14.421Z</updated>
    
    <content type="html"><![CDATA[<h1 id="wechatmini"><a href="#wechatmini" class="headerlink" title="wechatmini"></a>wechatmini</h1><p>PhalApi 2.x 微信小程序扩展</p><h2 id="安装和配置"><a href="#安装和配置" class="headerlink" title="安装和配置"></a>安装和配置</h2><p>修改项目下的composer.json文件，并添加： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;phalapi/wechatmini&quot;:&quot;dev-master&quot;</span><br></pre></td></tr></table></figure><p>然后执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer update</span><br></pre></td></tr></table></figure><h2 id="安装成功后，添加以下配置到-config-app-php文件："><a href="#安装成功后，添加以下配置到-config-app-php文件：" class="headerlink" title="安装成功后，添加以下配置到./config/app.php文件："></a>安装成功后，添加以下配置到./config/app.php文件：</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'Wechatmini'</span> =&gt; <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">'appid'</span> =&gt; <span class="string">'你的appid'</span>,</span><br><span class="line">        <span class="string">'secret_key'</span> =&gt; <span class="string">'微信小程序后台生成的secret_key，请勿随便修改'</span>,</span><br><span class="line">        <span class="string">'mch_id'</span> =&gt; <span class="string">'商户号'</span>,<span class="comment">//不用支付可以不用配置</span></span><br><span class="line">        <span class="string">'mch_key'</span> =&gt; <span class="string">'支付秘钥'</span>,<span class="comment">//不用支付可以不用配置</span></span><br><span class="line">    ),</span><br></pre></td></tr></table></figure><h2 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h2><p>在/path/to/phalapi/config/di.php文件中，注册： </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$di-&gt;wechatmini = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> \PhalApi\Wechatmini\Lite();</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>获取access_token和文本检测需要用到access_token，所以需要给public文件夹给予777权限。</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="获取openid"><a href="#获取openid" class="headerlink" title="获取openid"></a>获取openid</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\PhalApi\DI()-&gt;wechatmini-&gt;getOpenid(<span class="string">'小程序返回请求的code'</span>);</span><br></pre></td></tr></table></figure><p>返回结果：</p><table><thead><tr><th>返回字段</th><th>说明</th></tr></thead><tbody><tr><td>ret</td><td>状态码：200表示数据获取成功，其他错误码可参考小程序错误码说明</td></tr><tr><td>data</td><td>返回数据，openid获取失败时为空</td></tr><tr><td>data.openid</td><td>用户唯一标识</td></tr><tr><td>data.session_key</td><td>会话密钥</td></tr><tr><td>data.unionid</td><td>用户在开放平台的唯一标识符，满足UnionID下发条件的情况下这个才有</td></tr><tr><td>msg</td><td>错误提示信息：如：code been used, hints: [ req_id: OpwajA01912023 ]</td></tr></tbody></table><h3 id="获取access-token"><a href="#获取access-token" class="headerlink" title="获取access_token"></a>获取access_token</h3><p>说明：直接获取access_token，不加任何处理，有次数限制，用此方法获取后可能会导致已经获取且在使用的token失效</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\PhalApi\DI()-&gt;wechatmini-&gt;getToken();</span><br></pre></td></tr></table></figure><p>返回结果：</p><table><thead><tr><th>返回字段</th><th>说明</th></tr></thead><tbody><tr><td>ret</td><td>状态码：200表示数据获取成功</td></tr><tr><td>data</td><td>返回数据，access_token获取失败时为空</td></tr><tr><td>data.access_token</td><td>获取到的凭证</td></tr><tr><td>data.expires_in</td><td>凭证有效时间，单位：秒</td></tr><tr><td>msg</td><td>错误提示信息：如：invalid appid hint: [EAncHA01641466]</td></tr></tbody></table><h3 id="获取access-token并且保存服务器"><a href="#获取access-token并且保存服务器" class="headerlink" title="获取access_token并且保存服务器"></a>获取access_token并且保存服务器</h3><p>说明：获取access_token，由于微信对access_token获取次数有限制，此方法将token存服务器，需要时直接取服务器token，过期自动更新token</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\PhalApi\DI()-&gt;wechatmini-&gt;getAccessToken();</span><br></pre></td></tr></table></figure><p>返回结果：</p><table><thead><tr><th>返回字段</th><th>说明</th></tr></thead><tbody><tr><td>ret</td><td>状态码：200表示数据获取成功</td></tr><tr><td>data</td><td>返回数据，access_token获取失败时为空</td></tr><tr><td>data.access_token</td><td>获取到的凭证</td></tr><tr><td>data.expires_in</td><td>凭证过期时间戳</td></tr><tr><td>msg</td><td>错误提示信息：如：invalid appid hint: [EAncHA01641466]</td></tr></tbody></table><h3 id="文本违规检测"><a href="#文本违规检测" class="headerlink" title="文本违规检测"></a>文本违规检测</h3><p>说明：检查一段文本是否含有违法违规内容。应用场景举例：用户个人资料违规文字检测；媒体新闻类用户发表文章，评论内容检测；游戏类用户编辑上传的素材(如答题类小游戏用户上传的问题及答案)检测等。频率限制：单个 appId 调用上限为 2000 次/分钟，1,000,000 次/天</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\PhalApi\DI()-&gt;wechatmini-&gt;msgSecCheck(<span class="string">'待检测内容'</span>);</span><br></pre></td></tr></table></figure><p>返回结果：</p><table><thead><tr><th>返回字段</th><th>说明</th></tr></thead><tbody><tr><td>ret</td><td>状态码：200表示数据获取成功</td></tr><tr><td>data</td><td>返回数据，ok表示内容正常;risky表示含有违法违规内容</td></tr><tr><td>msg</td><td>错误提示信息：如：invalid credential, access_token is invalid or not latest hint: [qaUhIa01589041]</td></tr></tbody></table><h3 id="发送模板消息"><a href="#发送模板消息" class="headerlink" title="发送模板消息"></a>发送模板消息</h3><p>说明：基于微信的通知渠道，我们为开发者提供了可以高效触达用户的模板消息能力，以便实现服务的闭环并提供更佳的体验。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\PhalApi\DI()-&gt;wechatmini-&gt;sendWeAppMessage(<span class="string">'touser'</span>, <span class="string">'formid'</span>, <span class="string">'template_id'</span>, <span class="string">'page'</span>, <span class="string">'emphasis_keyword'</span>, <span class="string">'data'</span>);</span><br></pre></td></tr></table></figure><p>参数说明：</p><table><thead><tr><th>参数</th><th>必填</th><th>说明</th></tr></thead><tbody><tr><td>touser</td><td>是</td><td>接收者（用户）的 openid</td></tr><tr><td>formid</td><td>是</td><td>表单提交场景下，为 submit 事件带上的 formId；支付场景下，为本次支付的 prepay_id</td></tr><tr><td>template_id</td><td>是</td><td>所需下发的模板消息的id（微信公众平台模板消息选择获取）</td></tr><tr><td>page</td><td>否</td><td>点击模板卡片后的跳转页面，仅限本小程序内的页面。支持带参数,（示例index?foo=bar）。该字段不填则模板无跳转。</td></tr><tr><td>emphasis_keyword</td><td>否</td><td>模板需要放大的关键词，不填则默认无放大</td></tr><tr><td>data</td><td>是</td><td>模板内容，不填则下发空模板</td></tr></tbody></table><p>示例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$openid = <span class="string">'接收者（用户）的 openid'</span>;</span><br><span class="line">$form_id = <span class="string">"小程序端获取的formid"</span>,</span><br><span class="line">$template_id = <span class="string">'eb_azL3MW76Hn_U9yu6GZOf5Lm90AROUruI1OdECYUQ'</span>;</span><br><span class="line">$page = <span class="string">'pages/index/index'</span>;</span><br><span class="line">$emphasis_keyword = <span class="string">'keyword2.DATA'</span>;</span><br><span class="line">$data = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">"keyword1"</span> =&gt; <span class="keyword">array</span>(<span class="string">"value"</span> =&gt; <span class="string">"我们已收到您的反馈意见，感谢您的使用"</span>, <span class="string">"color"</span> =&gt; <span class="string">"#173177"</span>),</span><br><span class="line">    <span class="string">"keyword2"</span> =&gt; <span class="keyword">array</span>(<span class="string">"value"</span> =&gt; <span class="string">"感谢使用Phalapi"</span>, <span class="string">"color"</span> =&gt; <span class="string">"#173177"</span>));</span><br><span class="line">$res = \PhalApi\DI()-&gt;wechatmini-&gt;sendWeAppMessage($openid, $formid, $template_id, $page,$emphasis_keyword, $data);</span><br><span class="line"><span class="keyword">return</span> $res;</span><br></pre></td></tr></table></figure><p>返回结果：</p><table><thead><tr><th>返回字段</th><th>说明</th></tr></thead><tbody><tr><td>ret</td><td>状态码：200表示数据获取成功,其他错误码可参考小程序错误码说明</td></tr><tr><td>data</td><td>返回数据，ok表示成功发送模板消息</td></tr><tr><td>msg</td><td>错误提示信息：错误提示信息：如：form id used count reach limit hint: [P90MbA0846ge20]</td></tr></tbody></table><p>错误码说明：</p><table><thead><tr><th>返回码</th><th>说明</th></tr></thead><tbody><tr><td>40037</td><td>template_id不正确</td></tr><tr><td>41028</td><td>form_id不正确，或者过期</td></tr><tr><td>41029</td><td>form_id已被使用</td></tr><tr><td>41030</td><td>page不正确</td></tr><tr><td>45009</td><td>接口调用超过限额（目前默认每个帐号日调用限额为100万）</td></tr></tbody></table><h3 id="微信预支付"><a href="#微信预支付" class="headerlink" title="微信预支付"></a>微信预支付</h3><p>说明：商户在小程序中先调用该接口在微信支付服务后台生成预支付交易单，返回正确的预支付交易后调起支付。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\PhalApi\DI()-&gt;wechatmini-&gt;WxPay(<span class="string">'付款者openid'</span>, <span class="string">'付款金额'</span>, <span class="string">'商品描述'</span>);</span><br></pre></td></tr></table></figure><p>返回结果：</p><table><thead><tr><th>返回字段</th><th>说明</th></tr></thead><tbody><tr><td>ret</td><td>状态码：200表示数据获取成功</td></tr><tr><td>data</td><td>返回数据,数据获取失败时为空</td></tr><tr><td>data.appId</td><td>微信分配的小程序ID</td></tr><tr><td>data.timeStamp</td><td>时间戳从1970年1月1日00:00:00至今的秒数,即当前的时间</td></tr><tr><td>data.nonceStr</td><td>随机字符串，长度为32个字符以下。</td></tr><tr><td>data.package</td><td>统一下单接口返回的 prepay_id 参数值</td></tr><tr><td>data.signType</td><td>签名算法，暂支持 MD5</td></tr><tr><td>data.paySign</td><td>签名,具体签名方案参见小程序支付接口文档;</td></tr><tr><td>msg</td><td>错误提示信息：如：invalid credential, access_token is invalid or not latest hint: [qaUhIa01589041]</td></tr></tbody></table><h3 id="微信小程序数据解密"><a href="#微信小程序数据解密" class="headerlink" title="微信小程序数据解密"></a>微信小程序数据解密</h3><p>说明：小程序可以通过各种前端接口获取微信提供的开放数据。 考虑到开发者服务器也需要获取这些开放数据，微信会对这些数据做签名和加密处理。 开发者后台拿到开放数据后可以对数据进行校验签名和解密，来保证数据不被篡改。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\PhalApi\DI()-&gt;wechatmini-&gt;WXBizDataCrypt(<span class="string">'sessionKey'</span>, <span class="string">'encryptedData'</span>, <span class="string">'iv'</span>);</span><br></pre></td></tr></table></figure><p>参数说明：</p><table><thead><tr><th>参数</th><th>必填</th><th>说明</th></tr></thead><tbody><tr><td>sessionKey</td><td>是</td><td>会话密钥，wx.login可获取</td></tr><tr><td>encryptedData</td><td>是</td><td>包括敏感数据在内的完整用户信息的加密数据</td></tr><tr><td>iv</td><td>是</td><td>加密算法的初始向量</td></tr></tbody></table><p>返回结果：</p><table><thead><tr><th>返回字段</th><th>说明</th></tr></thead><tbody><tr><td>ret</td><td>状态码：200表示数据获取成功,其他错误码可参考小程序错误码说明</td></tr><tr><td>data</td><td>返回数据，返回解密后的数据</td></tr><tr><td>msg</td><td>错误提示信息：错误提示信息</td></tr></tbody></table><p>错误码说明：</p><table><thead><tr><th>返回码</th><th>说明</th></tr></thead><tbody><tr><td>-41001</td><td>IllegalAesKey</td></tr><tr><td>-41002</td><td>IllegalIv</td></tr><tr><td>-41003</td><td>IllegalBuffer</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;wechatmini&quot;&gt;&lt;a href=&quot;#wechatmini&quot; class=&quot;headerlink&quot; title=&quot;wechatmini&quot;&gt;&lt;/a&gt;wechatmini&lt;/h1&gt;&lt;p&gt;PhalApi 2.x 微信小程序扩展&lt;/p&gt;
&lt;h2 id=&quot;安装和配置&quot;
      
    
    </summary>
    
      <category term="php" scheme="http://www.jmideas.cn/categories/php/"/>
    
    
      <category term="微信小程序" scheme="http://www.jmideas.cn/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
      <category term="php" scheme="http://www.jmideas.cn/tags/php/"/>
    
      <category term="Phalapi2.x" scheme="http://www.jmideas.cn/tags/Phalapi2-x/"/>
    
      <category term="扩展" scheme="http://www.jmideas.cn/tags/%E6%89%A9%E5%B1%95/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://www.jmideas.cn/2018/06/22/hello-world/"/>
    <id>http://www.jmideas.cn/2018/06/22/hello-world/</id>
    <published>2018-06-22T04:29:52.332Z</published>
    <updated>2016-08-28T13:31:56.000Z</updated>
    
    <content type="html"><![CDATA[<center><strong>Welcome to JamesLiu’s BLOG.</strong></center><h2 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h2><p>&emsp;&emsp;每个程序员一开始都会接触Hello World,hexo也不例外，给俺的第一个md文件就是hello world，俺为了熟悉下博客，也就先拿hello world来试下水吧！！！</p><h3 id="关于Hello-world"><a href="#关于Hello-world" class="headerlink" title="关于Hello world"></a>关于Hello world</h3><p>&emsp;&emsp;Hello World ，中文意思：你好，世界。世界上的第一个程序就是Hello World，由Brian Kernighan创作。</p><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><p>Hello World:<br><img src="http://www.myexception.cn/img/2014/08/19/111917265.png" alt=""></p><h3 id="Hello-world简介"><a href="#Hello-world简介" class="headerlink" title="Hello world简介"></a>Hello world简介</h3><p>&emsp;&emsp;“Hello, world”程序是指在计算机屏幕上输出“Hello,world”这行字符串的计算机程序，“hello, world”的中文意思是“世界，你好”。这个例程在Brian Kernighan 和Dennis M. Ritchie合著的《The C Programme Language》使用而广泛流行。因为它的简洁，实用，并包含了一个该版本的C程序首次出现在1974年Brian Kernighan所撰写的《Programming in C: A Tutorial》</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">"hello, world\n"</span>);</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;实际上将“Hello”和“World”一起使用的程序最早出现于1972年，出现在贝尔实验室成员Brian Kernighan撰写的内部技术文件《Introduction to the Language B》之中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">main</span></span>()&#123;</span><br><span class="line">    extern a,b,c;</span><br><span class="line">    putchar(a);putchar(b);putchar(c);putchar(<span class="string">'!*n'</span>);</span><br><span class="line">&#125;</span><br><span class="line">a<span class="string">'hell'</span>;</span><br><span class="line">b<span class="string">'o,w'</span>;</span><br><span class="line">c<span class="string">'orld'</span>;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;最初的”hello, world”打印内容有个标准，即全小写，有逗号，逗号后空一格，且无感叹号。不过沿用至今，完全遵循传统标准形式的反而很少出现。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;center&gt;&lt;strong&gt;Welcome to JamesLiu’s BLOG.&lt;/strong&gt;&lt;/center&gt;

&lt;h2 id=&quot;Hello-World&quot;&gt;&lt;a href=&quot;#Hello-World&quot; class=&quot;headerlink&quot; title=&quot;Hello W
      
    
    </summary>
    
      <category term="test" scheme="http://www.jmideas.cn/categories/test/"/>
    
    
      <category term="test" scheme="http://www.jmideas.cn/tags/test/"/>
    
  </entry>
  
  <entry>
    <title>centos7重启</title>
    <link href="http://www.jmideas.cn/2017/09/14/centos7%E9%87%8D%E5%90%AF/"/>
    <id>http://www.jmideas.cn/2017/09/14/centos7重启/</id>
    <published>2017-09-14T14:17:06.000Z</published>
    <updated>2017-09-14T14:23:28.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="nginx重启"><a href="#nginx重启" class="headerlink" title="nginx重启"></a>nginx重启</h2><ol><li><p>启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start nginx</span><br></pre></td></tr></table></figure></li><li><p>停止</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop nginx</span><br></pre></td></tr></table></figure></li><li><p>重启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart nginx</span><br></pre></td></tr></table></figure></li></ol><h2 id="mysql重启"><a href="#mysql重启" class="headerlink" title="mysql重启"></a>mysql重启</h2><ol><li><p>启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start mysqld</span><br></pre></td></tr></table></figure></li><li><p>停止</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop mysqld</span><br></pre></td></tr></table></figure></li><li><p>重启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart mysqld</span><br></pre></td></tr></table></figure></li></ol><h2 id="php-fpm重启"><a href="#php-fpm重启" class="headerlink" title="php-fpm重启"></a>php-fpm重启</h2><ol><li><p>启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start php-fpm</span><br></pre></td></tr></table></figure></li><li><p>停止</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop php-fpm</span><br></pre></td></tr></table></figure></li><li><p>重启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart php-fpm</span><br></pre></td></tr></table></figure></li></ol><h2 id="apache重启"><a href="#apache重启" class="headerlink" title="apache重启"></a>apache重启</h2><ol><li><p>启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start httpd</span><br></pre></td></tr></table></figure></li><li><p>停止</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop httpd</span><br></pre></td></tr></table></figure></li><li><p>重启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart httpd</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;nginx重启&quot;&gt;&lt;a href=&quot;#nginx重启&quot; class=&quot;headerlink&quot; title=&quot;nginx重启&quot;&gt;&lt;/a&gt;nginx重启&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;启动&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;ta
      
    
    </summary>
    
      <category term="liunx" scheme="http://www.jmideas.cn/categories/liunx/"/>
    
    
      <category term="实用" scheme="http://www.jmideas.cn/tags/%E5%AE%9E%E7%94%A8/"/>
    
      <category term="linux" scheme="http://www.jmideas.cn/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>github上传本地代码</title>
    <link href="http://www.jmideas.cn/2017/08/30/github%E4%B8%8A%E4%BC%A0%E6%9C%AC%E5%9C%B0%E4%BB%A3%E7%A0%81/"/>
    <id>http://www.jmideas.cn/2017/08/30/github上传本地代码/</id>
    <published>2017-08-29T16:12:37.000Z</published>
    <updated>2017-08-29T16:29:22.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h2><p>github个人主页新建即可，注意选择REMADE</p><h2 id="本地上传"><a href="#本地上传" class="headerlink" title="本地上传"></a>本地上传</h2><h3 id="选择上传目录文件"><a href="#选择上传目录文件" class="headerlink" title="选择上传目录文件"></a>选择上传目录文件</h3><p>在目录下git bash</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><h4 id="执行git命令"><a href="#执行git命令" class="headerlink" title="执行git命令"></a>执行git命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><h4 id="将项目的所有文件添加到仓库中"><a href="#将项目的所有文件添加到仓库中" class="headerlink" title="将项目的所有文件添加到仓库中"></a>将项目的所有文件添加到仓库中</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure><h4 id="添加注释"><a href="#添加注释" class="headerlink" title="添加注释"></a>添加注释</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">"注释语句"</span></span><br></pre></td></tr></table></figure><h4 id="本地的仓库关联到github"><a href="#本地的仓库关联到github" class="headerlink" title="本地的仓库关联到github"></a>本地的仓库关联到github</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin https://github.com/JamesLiuquan/JMschool/tree/master</span><br></pre></td></tr></table></figure><h4 id="先把远程服务器github上面的文件拉下来"><a href="#先把远程服务器github上面的文件拉下来" class="headerlink" title="先把远程服务器github上面的文件拉下来"></a>先把远程服务器github上面的文件拉下来</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull origin master</span><br></pre></td></tr></table></figure><h4 id="上传文件"><a href="#上传文件" class="headerlink" title="上传文件"></a>上传文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><h3 id="遇到问题"><a href="#遇到问题" class="headerlink" title="遇到问题"></a>遇到问题</h3><ol><li>出现错误的主要原因是github中的README.md文件不在本地代码目录中<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">error: failed to push some refs to <span class="string">'git@github.com:yangchao0718/cocos2d.git</span></span><br><span class="line"><span class="string">hint: Updates were rejected because the tip of your current branch is behin</span></span><br><span class="line"><span class="string">hint: its remote counterpart. Integrate the remote changes (e.g.</span></span><br><span class="line"><span class="string">hint: '</span>git pull ...<span class="string">') before pushing again.</span></span><br><span class="line"><span class="string">hint: See the '</span>Note about fast-forwards<span class="string">' in '</span>git push --<span class="built_in">help</span><span class="string">' for details.</span></span><br></pre></td></tr></table></figure></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">解决方法（pull=fetch+merge）</span><br><span class="line">git pull --rebase origin master</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;创建仓库&quot;&gt;&lt;a href=&quot;#创建仓库&quot; class=&quot;headerlink&quot; title=&quot;创建仓库&quot;&gt;&lt;/a&gt;创建仓库&lt;/h2&gt;&lt;p&gt;github个人主页新建即可，注意选择REMADE&lt;/p&gt;
&lt;h2 id=&quot;本地上传&quot;&gt;&lt;a href=&quot;#本地上传&quot; cl
      
    
    </summary>
    
      <category term="github" scheme="http://www.jmideas.cn/categories/github/"/>
    
    
      <category term="github - 实用 - 代码上传" scheme="http://www.jmideas.cn/tags/github-%E5%AE%9E%E7%94%A8-%E4%BB%A3%E7%A0%81%E4%B8%8A%E4%BC%A0/"/>
    
  </entry>
  
  <entry>
    <title>php正则表达式解析html</title>
    <link href="http://www.jmideas.cn/2017/08/17/php%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%A7%A3%E6%9E%90html/"/>
    <id>http://www.jmideas.cn/2017/08/17/php正则表达式解析html/</id>
    <published>2017-08-17T15:46:07.000Z</published>
    <updated>2018-06-22T08:26:30.357Z</updated>
    
    <content type="html"><![CDATA[<h2 id="常用表达式"><a href="#常用表达式" class="headerlink" title="常用表达式"></a>常用表达式</h2><ol><li><p>找到某个标签（如table标签）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">preg_match(<span class="string">"/&lt;table[^&gt;]*?&gt;(.*?)&lt;\/table&gt;/s"</span>,<span class="variable">$file_contents</span>,<span class="variable">$match</span>);</span><br></pre></td></tr></table></figure></li><li><p>去掉tr前标签（其它标签同样适用）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$table</span> = preg_replace(<span class="string">"'&lt;table[^&gt;]*?&gt;'si"</span>,<span class="string">""</span>,<span class="variable">$table</span>);</span><br><span class="line"><span class="variable">$table</span> = preg_replace(<span class="string">"'&lt;tr[^&gt;]*?&gt;'si"</span>,<span class="string">""</span>,<span class="variable">$table</span>);</span><br></pre></td></tr></table></figure></li><li><p>将tr后标签换成其它字符串便于后面解析数组 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$table</span> = str_replace(<span class="string">"&lt;/tr&gt;"</span>,<span class="string">"&#123;tr&#125;"</span>,<span class="variable">$table</span>);</span><br></pre></td></tr></table></figure></li><li><p>去掉html标签（全部）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$table</span> = preg_replace(<span class="string">"'&lt;[/!]*?[^&lt;&gt;]*?&gt;'si"</span>,<span class="string">""</span>,<span class="variable">$table</span>);</span><br></pre></td></tr></table></figure></li><li><p>去掉空白字符</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$table</span> = preg_replace(<span class="string">"'([rn])[s]+'"</span>,<span class="string">""</span>,<span class="variable">$table</span>);</span><br><span class="line"><span class="variable">$table</span> = str_replace(<span class="string">" "</span>,<span class="string">""</span>,<span class="variable">$table</span>);</span><br></pre></td></tr></table></figure></li><li><p>去掉换行符</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$table</span>=preg_replace(<span class="string">"/\s/"</span>,<span class="string">""</span>,<span class="variable">$table</span>);</span><br></pre></td></tr></table></figure></li></ol><h2 id="数组用法"><a href="#数组用法" class="headerlink" title="数组用法"></a>数组用法</h2><ol><li><p>将解析得到的html按某个字符串打断</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$table</span> = explode(<span class="string">'&#123;tr&#125;'</span>, <span class="variable">$table</span>);</span><br></pre></td></tr></table></figure></li><li><p>删除数组最后一个元素</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array_pop(<span class="variable">$table</span>);</span><br></pre></td></tr></table></figure><ol start="3"><li>删除数组第一个元素</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array_shift(<span class="variable">$th</span>);</span><br></pre></td></tr></table></figure><ol start="4"><li>数组对应键连接</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$array1</span>=array(<span class="string">"name"</span>,<span class="string">"school"</span>,<span class="string">"type"</span>);</span><br><span class="line"><span class="variable">$array2</span>=array(<span class="string">"JamesLiu"</span>,<span class="string">"华东交通大学"</span>,<span class="string">"理工类"</span>);</span><br><span class="line"><span class="variable">$res</span> = array_combine(<span class="variable">$array1</span>,<span class="variable">$array2</span>);</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array_combine用的时候注意array1和array2的元素个数相同</span><br></pre></td></tr></table></figure><h2 id="CSDN-demo（处理表格"><a href="#CSDN-demo（处理表格" class="headerlink" title="CSDN demo（处理表格)"></a>CSDN demo（处理表格)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="keyword">function</span> get_td_array(<span class="variable">$table</span>) &#123;</span><br><span class="line">  <span class="variable">$table</span> = preg_replace(<span class="string">"'&lt;table[^&gt;]*?&gt;'si"</span>,<span class="string">""</span>,<span class="variable">$table</span>);</span><br><span class="line">  <span class="variable">$table</span> = preg_replace(<span class="string">"'&lt;tr[^&gt;]*?&gt;'si"</span>,<span class="string">""</span>,<span class="variable">$table</span>);</span><br><span class="line">  <span class="variable">$table</span> = preg_replace(<span class="string">"'&lt;td[^&gt;]*?&gt;'si"</span>,<span class="string">""</span>,<span class="variable">$table</span>);</span><br><span class="line">  <span class="variable">$table</span> = str_replace(<span class="string">"&lt;/tr&gt;"</span>,<span class="string">"&#123;tr&#125;"</span>,<span class="variable">$table</span>);</span><br><span class="line">  <span class="variable">$table</span> = str_replace(<span class="string">"&lt;/td&gt;"</span>,<span class="string">"&#123;td&#125;"</span>,<span class="variable">$table</span>);</span><br><span class="line">  //去掉 HTML 标记 </span><br><span class="line">  <span class="variable">$table</span> = preg_replace(<span class="string">"'&lt;[/!]*?[^&lt;&gt;]*?&gt;'si"</span>,<span class="string">""</span>,<span class="variable">$table</span>);</span><br><span class="line">  //去掉空白字符 </span><br><span class="line">  <span class="variable">$table</span> = preg_replace(<span class="string">"'([rn])[s]+'"</span>,<span class="string">""</span>,<span class="variable">$table</span>);</span><br><span class="line">  <span class="variable">$table</span> = str_replace(<span class="string">" "</span>,<span class="string">""</span>,<span class="variable">$table</span>);</span><br><span class="line">  <span class="variable">$table</span> = str_replace(<span class="string">" "</span>,<span class="string">""</span>,<span class="variable">$table</span>);</span><br><span class="line">  <span class="variable">$table</span> = explode(<span class="string">'&#123;tr&#125;'</span>, <span class="variable">$table</span>);</span><br><span class="line">  array_pop(<span class="variable">$table</span>);</span><br><span class="line">  foreach (<span class="variable">$table</span> as <span class="variable">$key</span>=&gt;<span class="variable">$tr</span>) &#123;</span><br><span class="line">    <span class="variable">$td</span> = explode(<span class="string">'&#123;td&#125;'</span>, <span class="variable">$tr</span>);</span><br><span class="line">    array_pop(<span class="variable">$td</span>);</span><br><span class="line">    <span class="variable">$td_array</span>[] = <span class="variable">$td</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">return</span> <span class="variable">$td_array</span>;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;常用表达式&quot;&gt;&lt;a href=&quot;#常用表达式&quot; class=&quot;headerlink&quot; title=&quot;常用表达式&quot;&gt;&lt;/a&gt;常用表达式&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;找到某个标签（如table标签）&lt;/p&gt;
&lt;figure class=&quot;highlight bas
      
    
    </summary>
    
      <category term="js" scheme="http://www.jmideas.cn/categories/js/"/>
    
    
      <category term="微信小程序" scheme="http://www.jmideas.cn/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
      <category term="php" scheme="http://www.jmideas.cn/tags/php/"/>
    
      <category term="正则表达式" scheme="http://www.jmideas.cn/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序开发</title>
    <link href="http://www.jmideas.cn/2017/05/17/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/"/>
    <id>http://www.jmideas.cn/2017/05/17/微信小程序开发/</id>
    <published>2017-05-17T13:34:45.000Z</published>
    <updated>2017-05-17T14:01:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="命名规范"><a href="#命名规范" class="headerlink" title="命名规范"></a>命名规范</h2><h3 id="目录和文件"><a href="#目录和文件" class="headerlink" title="目录和文件"></a>目录和文件</h3><ul><li>目录名及文件名采用小写+下划线；</li><li>变量名采用驼峰命名（首字母大写）；</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;命名规范&quot;&gt;&lt;a href=&quot;#命名规范&quot; class=&quot;headerlink&quot; title=&quot;命名规范&quot;&gt;&lt;/a&gt;命名规范&lt;/h2&gt;&lt;h3 id=&quot;目录和文件&quot;&gt;&lt;a href=&quot;#目录和文件&quot; class=&quot;headerlink&quot; title=&quot;目录和文件&quot;&gt;
      
    
    </summary>
    
      <category term="掌上交理" scheme="http://www.jmideas.cn/categories/%E6%8E%8C%E4%B8%8A%E4%BA%A4%E7%90%86/"/>
    
    
      <category term="规范 - 统一 - api" scheme="http://www.jmideas.cn/tags/%E8%A7%84%E8%8C%83-%E7%BB%9F%E4%B8%80-api/"/>
    
  </entry>
  
  <entry>
    <title>django部署nginx</title>
    <link href="http://www.jmideas.cn/2017/03/12/django%E9%83%A8%E7%BD%B2nginx/"/>
    <id>http://www.jmideas.cn/2017/03/12/django部署nginx/</id>
    <published>2017-03-12T12:23:22.000Z</published>
    <updated>2017-03-12T12:53:30.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><ol><li>腾讯家的centos7.2</li><li>python3.6</li><li>pip3</li></ol><h2 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h2><ol><li><p>安装nginx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install epel-release</span><br><span class="line">sudo yum install python-devel nginx</span><br></pre></td></tr></table></figure></li><li><p>安装 supervisor<br>一个专门用来管理进程的工具，我们用它来管理 uwsgi 进程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install supervisor</span><br></pre></td></tr></table></figure></li></ol><p>ps pip3安装不了supervisor</p><ol start="3"><li>安装 uwsgi<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install uwsgi</span><br></pre></td></tr></table></figure></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uwsgi --http :3389 --module test1.wsgi</span><br></pre></td></tr></table></figure><p>比如我的目录结构为test1-&gt;test1-&gt;wsgi.py,则那条语句在第一个test下执行</p><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><ol><li>使用supervisor来管理进程</li></ol><p>生成 supervisor 默认配置文件，比如我们放在 /etc/supervisord.conf 路径中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(sudo) echo_supervisord_conf &gt; /etc/supervisord.conf</span><br></pre></td></tr></table></figure><p>打开 supervisor.conf 在最底部添加（每一行前面不要有空格，防止报错）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[program:jmideas]</span><br><span class="line">//<span class="built_in">command</span>=/usr/<span class="built_in">local</span>/bin/uwsgi --http :3389 --module test1.wsgi </span><br><span class="line"><span class="built_in">command</span>=/path/to/uwsgi --http :8003 --<span class="built_in">chdir</span> /path/to/zqxt --module zqxt.wsgi</span><br><span class="line">//directory=/home/test1</span><br><span class="line">directory=/path/to/zqxt</span><br><span class="line">startsecs=0</span><br><span class="line">stopwaitsecs=0</span><br><span class="line">autostart=<span class="literal">true</span></span><br><span class="line">autorestart=<span class="literal">true</span></span><br></pre></td></tr></table></figure><p>command 中写上对应的命令，这样，就可以用 supervisor 来管理了</p><p>启动supervisor</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(sudo) supervisord -c /etc/supervisord.conf</span><br></pre></td></tr></table></figure><p>重启程序（项目）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(sudo) supervisorctl -c /etc/supervisord.conf restart zqxt</span><br></pre></td></tr></table></figure><p>启动，停止，或重启 supervisor 管理的某个程序 或 所有程序：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(sudo) supervisorctl -c /etc/supervisord.conf [start|stop|restart] [program-name|all]</span><br></pre></td></tr></table></figure><p>以 uwsgi 为例，上面这样使用一行命令太长了，我们使用 ini 配置文件来搞定，比如项目在 /home 这个位置，</p><p>在其中新建一个 uwsgi.ini 全路径为 /home/uwsgi.ini</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[uwsgi]</span><br><span class="line">socket = /tmp2/test1.sock</span><br><span class="line"><span class="built_in">chdir</span> = /home</span><br><span class="line">wsgi-file = test1/wsgi.py</span><br><span class="line">touch-reload = /home/test1/reload</span><br><span class="line"> </span><br><span class="line">processes = 2</span><br><span class="line">threads = 4</span><br><span class="line"> </span><br><span class="line">chmod-socket = 664</span><br><span class="line">chown-socket = tu:www-data</span><br><span class="line"> </span><br><span class="line">vacuum = <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>注意上面的 /home/tu/zqxt/zqxt.sock ，一会儿我们把它和 nginx 关联起来。</p><p>在项目上新建一个空白的 reload 文件，只要 touch 一下这个文件（touch reload) 项目就会重启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /tmp2/ &amp;&amp; sudo chmod 777 /tmp2/</span><br><span class="line">然后可以用 /tmp2/test1.sock 这样的路径了</span><br></pre></td></tr></table></figure><p>修改 supervisor 配置文件中的 command 一行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[program:zqxt]</span><br><span class="line"><span class="built_in">command</span>=/usr/<span class="built_in">local</span>/bin/uwsgi --ini /home/uwsgi.ini</span><br><span class="line">directory=/path/to/zqxt</span><br><span class="line">startsecs=0</span><br></pre></td></tr></table></figure><p>然后重启一下 supervisor：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(sudo) supervisorctl -c /etc/supervisord.conf restart all</span><br></pre></td></tr></table></figure><h2 id="配置-Nginx"><a href="#配置-Nginx" class="headerlink" title="配置 Nginx"></a>配置 Nginx</h2><p>新建一个网站jmideas</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/nginx/sites-available/jmideas.conf</span><br></pre></td></tr></table></figure><p>写入以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen      3389;</span><br><span class="line">    server_name www.jmideas.cn;</span><br><span class="line">    charset     utf-8;</span><br><span class="line"> </span><br><span class="line">    client_max_body_size 75M;</span><br><span class="line"> </span><br><span class="line">    location /media  &#123;</span><br><span class="line">        <span class="built_in">alias</span> /path/to/project/media;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    location /static &#123;</span><br><span class="line">        <span class="built_in">alias</span> /path/to/project/static;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    location / &#123;</span><br><span class="line">        uwsgi_pass  unix:///tmp2/test1.sock;</span><br><span class="line">        include     /etc/nginx/uwsgi_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>激活网站：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ln -s /etc/nginx/sites-available/zqxt.conf /etc/nginx/sites-enabled/zqxt.conf</span><br></pre></td></tr></table></figure><p>重启 nginx 服务器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service nginx reload 或 sudo service nginx restart 或 /path/to/nginx -s reload</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;腾讯家的centos7.2&lt;/li&gt;
&lt;li&gt;python3.6&lt;/li&gt;
&lt;li&gt;pip3&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id
      
    
    </summary>
    
      <category term="Linux" scheme="http://www.jmideas.cn/categories/Linux/"/>
    
    
      <category term="linux" scheme="http://www.jmideas.cn/tags/linux/"/>
    
      <category term="django" scheme="http://www.jmideas.cn/tags/django/"/>
    
      <category term="uwsgi" scheme="http://www.jmideas.cn/tags/uwsgi/"/>
    
      <category term="nginx" scheme="http://www.jmideas.cn/tags/nginx/"/>
    
      <category term="supervisor" scheme="http://www.jmideas.cn/tags/supervisor/"/>
    
  </entry>
  
  <entry>
    <title>Linux升级python，2.7到3.6</title>
    <link href="http://www.jmideas.cn/2017/03/12/Linux%E5%8D%87%E7%BA%A7python%EF%BC%8C2-7%E5%88%B03-6/"/>
    <id>http://www.jmideas.cn/2017/03/12/Linux升级python，2-7到3-6/</id>
    <published>2017-03-12T05:43:28.000Z</published>
    <updated>2017-03-12T06:47:14.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><ol><li>系统：腾讯家的centos7.2</li><li>python2.7升级到3.6<h2 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h2></li><li><p>可能使用的依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install openssl-devel bzip2-devel expat-devel gdbm-devel readline-devel sqlite-devel</span><br></pre></td></tr></table></figure></li><li><p>gcc编译器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install gcc</span><br></pre></td></tr></table></figure></li></ol><h2 id="下载安装包"><a href="#下载安装包" class="headerlink" title="下载安装包"></a>下载安装包</h2><ol><li>可新建一个python3文件夹</li><li>在该文件夹下运行下载命令<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://www.python.org/ftp/python/3.6.0/Python-3.6.0.tgz</span><br></pre></td></tr></table></figure></li></ol><h2 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf Python-3.6.0.tgz</span><br></pre></td></tr></table></figure><h2 id="把python移到-usr-local下面"><a href="#把python移到-usr-local下面" class="headerlink" title="把python移到/usr/local下面"></a>把python移到/usr/local下面</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv Python-3.6.0 /usr/<span class="built_in">local</span></span><br></pre></td></tr></table></figure><h2 id="删除旧版本的python依赖"><a href="#删除旧版本的python依赖" class="headerlink" title="删除旧版本的python依赖"></a>删除旧版本的python依赖</h2><p>ps 注意前提里面的两个条件已经正常安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ll /usr/bin | grep python</span><br><span class="line"></span><br><span class="line">rm -rf /usr/bin/python</span><br></pre></td></tr></table></figure></p><h2 id="进入python目录"><a href="#进入python目录" class="headerlink" title="进入python目录"></a>进入python目录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/Python-3.6.0/</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure</span><br></pre></td></tr></table></figure><h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make</span><br></pre></td></tr></table></figure><h2 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make install</span><br></pre></td></tr></table></figure><h2 id="删除旧的软链接，创建新的软链接到最新的python"><a href="#删除旧的软链接，创建新的软链接到最新的python" class="headerlink" title="删除旧的软链接，创建新的软链接到最新的python"></a>删除旧的软链接，创建新的软链接到最新的python</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rm -rf /usr/bin/python</span><br><span class="line"></span><br><span class="line">ln -s /usr/<span class="built_in">local</span>/bin/python3.5 /usr/bin/python</span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -V</span><br></pre></td></tr></table></figure><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p>yum不能正常使用<br>修改/usr/bin/yum的第一行为：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!/usr/bin/python2.7</span><br></pre></td></tr></table></figure></p><p>CentOS 7需要同时修改/usr/bin/yum以及/usr/libexec/urlgrabber-ext-down同样的Python版本</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;系统：腾讯家的centos7.2&lt;/li&gt;
&lt;li&gt;python2.7升级到3.6&lt;h2 id=&quot;前提&quot;&gt;&lt;a href=&quot;#前
      
    
    </summary>
    
      <category term="Linux" scheme="http://www.jmideas.cn/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.jmideas.cn/tags/Linux/"/>
    
      <category term="python" scheme="http://www.jmideas.cn/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Linux vim插件</title>
    <link href="http://www.jmideas.cn/2017/03/12/Linux-vim%E6%8F%92%E4%BB%B6/"/>
    <id>http://www.jmideas.cn/2017/03/12/Linux-vim插件/</id>
    <published>2017-03-11T17:42:15.000Z</published>
    <updated>2017-03-11T18:04:18.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install git</span><br></pre></td></tr></table></figure><h2 id="安装Bundle"><a href="#安装Bundle" class="headerlink" title="安装Bundle"></a>安装Bundle</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle</span><br></pre></td></tr></table></figure><h2 id="添加vundle支持"><a href="#添加vundle支持" class="headerlink" title="添加vundle支持"></a>添加vundle支持</h2><p>打开vimrc文件，添加如下配置<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"Vundle支持</span></span><br><span class="line"><span class="string">set nocompatible</span></span><br><span class="line"><span class="string">filetype off</span></span><br><span class="line"><span class="string">set rtp+=~/.vim/bundle/vundle/</span></span><br><span class="line"><span class="string">"</span>call vundle<span class="comment">#rc()</span></span><br><span class="line">call vundle<span class="comment">#begin()</span></span><br><span class="line">Bundle <span class="string">'gmarik/vundle'</span></span><br><span class="line">call vundle<span class="comment">#end()</span></span><br><span class="line">filetype plugin indent on</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">" 常用命令</span></span><br><span class="line"><span class="string">"</span> :PluginList       - 查看已经安装的插件</span><br><span class="line"><span class="string">" :PluginInstall    - 安装插件</span></span><br><span class="line"><span class="string">"</span> :PluginUpdate     - 更新插件</span><br><span class="line"><span class="string">" :PluginSearch     - 搜索插件，例如 :PluginSearch xml就能搜到xml相关的插件</span></span><br><span class="line"><span class="string">"</span> :PluginClean      - 删除插件，把安装插件对应行删除，然后执行这个命令即可</span><br><span class="line"><span class="string">" h: vundle         - 获取帮助</span></span><br></pre></td></tr></table></figure><h2 id="安装NERD-Tree"><a href="#安装NERD-Tree" class="headerlink" title="安装NERD Tree"></a>安装NERD Tree</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"NERD Tree是一个树形目录插件，方便浏览当前目录有哪些目录和文件</span></span><br><span class="line"><span class="string">Bundle 'scrooloose/nerdtree'</span></span><br><span class="line"><span class="string">let NERDChristmasTree=0</span></span><br><span class="line"><span class="string">let NERDTreeWinSize=35</span></span><br><span class="line"><span class="string">let NERDTreeChDirMode=2</span></span><br><span class="line"><span class="string">let NERDTreeIgnore=['\~$', '\.pyc$', '\.swp$']</span></span><br><span class="line"><span class="string">let NERDTreeShowBookmarks=1</span></span><br><span class="line"><span class="string">let NERDTreeWinPos="</span>left<span class="string">"</span></span><br><span class="line"><span class="string">"</span> Automatically open a NERDTree <span class="keyword">if</span> no files <span class="built_in">where</span> specified</span><br><span class="line">autocmd vimenter * <span class="keyword">if</span> !argc() | NERDTree | endif</span><br><span class="line"><span class="string">"Close vim if the only window left open is a NERDTree</span></span><br><span class="line"><span class="string">autocmd bufenter * if (winnr("</span>$<span class="string">") == 1 &amp;&amp; exists("</span>b:NERDTreeType<span class="string">") &amp;&amp;b:NERDTreeType == "</span>primary<span class="string">") | q | endif</span></span><br><span class="line"><span class="string">"</span> Open a NERDTree</span><br><span class="line">nmap &lt;F2&gt; :NERDTreeToggle&lt;cr&gt;</span><br></pre></td></tr></table></figure><h2 id="安装vim-powerline"><a href="#安装vim-powerline" class="headerlink" title="安装vim-powerline"></a>安装vim-powerline</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"Bundle :炫丽实用的状态栏</span></span><br><span class="line"><span class="string">Bundle 'Lokaltog/vim-powerline'</span></span><br><span class="line"><span class="string">set laststatus=2</span></span><br><span class="line"><span class="string">set t_Co=256</span></span><br><span class="line"><span class="string">let g:Powerline_symbols= 'unicode'</span></span><br><span class="line"><span class="string">set encoding=utf8</span></span><br></pre></td></tr></table></figure><h2 id="安装Tagbar"><a href="#安装Tagbar" class="headerlink" title="安装Tagbar"></a>安装Tagbar</h2><ol><li><p>安装ctags</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install ctags</span><br></pre></td></tr></table></figure></li><li><p>安装TagBar</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"Tagbar :比taglist更现代化的代码结构浏览工具</span></span><br><span class="line"><span class="string">Bundle 'majutsushi/tagbar'</span></span><br><span class="line"><span class="string">"</span>nmap &lt;Leader&gt;tb :TagbarToggle&lt;CR&gt;        <span class="string">"快捷键设置</span></span><br><span class="line"><span class="string">let g:tagbar_ctags_bin='ctags'            "</span>ctags程序的路径</span><br><span class="line"><span class="built_in">let</span> g:tagbar_width=30                    <span class="string">"窗口宽度的设置</span></span><br><span class="line"><span class="string">let g:tagbar_autofocus=1</span></span><br><span class="line"><span class="string">map &lt;F3&gt; :Tagbar&lt;CR&gt;</span></span><br><span class="line"><span class="string">"</span>autocmd BufReadPost *.cpp,*.c,*.h,*.hpp,*.cc,*.cxx call tagbar<span class="comment">#autoopen()</span></span><br><span class="line"><span class="string">"如果是c语言的程序的话，tagbar自动开启</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>&emsp;&emsp;以上几个插件全是通过Bundle安装，需确保Bundle安装成功，可使用：PluginList命令查看<br>插件安装只需添加以上配置，然后执行命令：PluginInstall安装，注意vim下方的提示，安装完成后会提示Done</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装git&quot;&gt;&lt;a href=&quot;#安装git&quot; class=&quot;headerlink&quot; title=&quot;安装git&quot;&gt;&lt;/a&gt;安装git&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;
      
    
    </summary>
    
      <category term="Linux" scheme="http://www.jmideas.cn/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.jmideas.cn/tags/Linux/"/>
    
      <category term="vim" scheme="http://www.jmideas.cn/tags/vim/"/>
    
      <category term="插件" scheme="http://www.jmideas.cn/tags/%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Linux vim 设置语法高亮</title>
    <link href="http://www.jmideas.cn/2017/03/12/Linux-vim-%E8%AE%BE%E7%BD%AE%E8%AF%AD%E6%B3%95%E9%AB%98%E4%BA%AE/"/>
    <id>http://www.jmideas.cn/2017/03/12/Linux-vim-设置语法高亮/</id>
    <published>2017-03-11T17:14:14.000Z</published>
    <updated>2017-03-11T17:16:20.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="进入"><a href="#进入" class="headerlink" title="进入"></a>进入</h2><p>cd进入vimrc配置文件</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"设置语法高亮</span></span><br><span class="line"><span class="string">syntax enable</span></span><br><span class="line"><span class="string">syntax on</span></span><br><span class="line"><span class="string">colorscheme desert</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;进入&quot;&gt;&lt;a href=&quot;#进入&quot; class=&quot;headerlink&quot; title=&quot;进入&quot;&gt;&lt;/a&gt;进入&lt;/h2&gt;&lt;p&gt;cd进入vimrc配置文件&lt;/p&gt;
&lt;h2 id=&quot;配置&quot;&gt;&lt;a href=&quot;#配置&quot; class=&quot;headerlink&quot; title=&quot;
      
    
    </summary>
    
      <category term="Linux" scheme="http://www.jmideas.cn/categories/Linux/"/>
    
    
      <category term="-Linux -vim" scheme="http://www.jmideas.cn/tags/Linux-vim/"/>
    
  </entry>
  
  <entry>
    <title>vim安装中文帮助</title>
    <link href="http://www.jmideas.cn/2017/03/12/vim%E5%AE%89%E8%A3%85%E4%B8%AD%E6%96%87%E5%B8%AE%E5%8A%A9/"/>
    <id>http://www.jmideas.cn/2017/03/12/vim安装中文帮助/</id>
    <published>2017-03-11T16:54:02.000Z</published>
    <updated>2017-03-11T17:07:50.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="打开终端"><a href="#打开终端" class="headerlink" title="打开终端"></a>打开终端</h2><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>&emsp;&emsp;cd一个空文件夹，安装完后可删除安装包<br>命令行输入即可下载：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$wget</span> http://nchc.dl.sourceforge.net/sourceforge/vimcdoc/vimcdoc-1.8.0.tar.gz</span><br></pre></td></tr></table></figure></p><p>ps：wget命令下载到当前目录，例如：你在home目录下执行wget命令的话，下载后压缩文件vimcdoc-1.8.0.tar.gz 将在home目录下，所以可找个空文件夹，以免太乱分不清</p><h2 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf vimcdoc-1.8.0.tar.gz</span><br></pre></td></tr></table></figure><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>进入解压后的文件夹可看到./vimdoc.sh<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ./vimcdoc.sh -i</span><br></pre></td></tr></table></figure></p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>打开vim<br>输入：help或者：h，如果成功应该可以看到中文帮助文档</p><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>vim中文文档不会覆盖原英文文档，安装后vim默认使用中文文档。<br>若想使用英文文档，可在vimrc中执行以下命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:<span class="built_in">set</span> helplang=en</span><br></pre></td></tr></table></figure></p><p>ps<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"中文帮助</span></span><br><span class="line"><span class="string">if version &gt;= 603</span></span><br><span class="line"><span class="string">    set helplang=cn</span></span><br><span class="line"><span class="string">endif</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;打开终端&quot;&gt;&lt;a href=&quot;#打开终端&quot; class=&quot;headerlink&quot; title=&quot;打开终端&quot;&gt;&lt;/a&gt;打开终端&lt;/h2&gt;&lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h
      
    
    </summary>
    
      <category term="Linux" scheme="http://www.jmideas.cn/categories/Linux/"/>
    
    
      <category term="-vim -Linux" scheme="http://www.jmideas.cn/tags/vim-Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux vim swp报错</title>
    <link href="http://www.jmideas.cn/2017/03/12/Linux-vim%E6%8A%A5%E9%94%99/"/>
    <id>http://www.jmideas.cn/2017/03/12/Linux-vim报错/</id>
    <published>2017-03-11T16:05:07.000Z</published>
    <updated>2017-03-11T16:36:50.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="关于swp文件"><a href="#关于swp文件" class="headerlink" title="关于swp文件"></a>关于swp文件</h2><p>&emsp;&emsp;使用vim，经常可以看到swap这个文件，也就是.vimrc.swp” already exists!的报错，看到报错心情都不好了，那么这个文件是怎么产生的呢？当你打开一个文件，vim就会生成这么一个<br>.(filename)swp文件以备不测，如果你正常退出，那么这么swp文件就会自动删除，因此swp文件就是我们没有正常退出vim编辑器时留下来的，比如：强行关闭vim，电源突然断电时，等等</p><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><ol><li>在当前目录下使用ls -a命令查看.swp隐藏文件</li><li>然后使用rm -rf删除这个文件就行了。比如：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf .vimrc.swp</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;关于swp文件&quot;&gt;&lt;a href=&quot;#关于swp文件&quot; class=&quot;headerlink&quot; title=&quot;关于swp文件&quot;&gt;&lt;/a&gt;关于swp文件&lt;/h2&gt;&lt;p&gt;&amp;emsp;&amp;emsp;使用vim，经常可以看到swap这个文件，也就是.vimrc.swp” al
      
    
    </summary>
    
      <category term="Linux" scheme="http://www.jmideas.cn/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.jmideas.cn/tags/Linux/"/>
    
      <category term="vim" scheme="http://www.jmideas.cn/tags/vim/"/>
    
      <category term="报错" scheme="http://www.jmideas.cn/tags/%E6%8A%A5%E9%94%99/"/>
    
  </entry>
  
  <entry>
    <title>Linux解决vim中文乱码问题</title>
    <link href="http://www.jmideas.cn/2017/03/11/Linux%E8%A7%A3%E5%86%B3%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98/"/>
    <id>http://www.jmideas.cn/2017/03/11/Linux解决中文乱码问题/</id>
    <published>2017-03-11T15:10:59.000Z</published>
    <updated>2017-03-11T15:59:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>该系统是腾讯家的linux os7.2</p><h2 id="配置config文件"><a href="#配置config文件" class="headerlink" title="配置config文件"></a>配置config文件</h2><ol><li>找到etc文件夹，cd进去</li><li>该文件夹下应该有vimrc文件和virc文件，两者好像不同，具体谷歌去，在打开文件的时候最好vim+文件名，这时候才会有效，vi+文件名好像没用</li><li>vim进入文件编辑，vim vimrc</li><li>在配置文件最后加入下面这几行配置<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"解决中文乱码问题</span></span><br><span class="line"><span class="string">   set fileencodings=utf-8,ucs-bom,gb18030,gbk,gb2312,cp936</span></span><br><span class="line"><span class="string">   set termencoding=utf-8</span></span><br><span class="line"><span class="string">   set encoding=utf-8</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h2&gt;&lt;p&gt;该系统是腾讯家的linux os7.2&lt;/p&gt;
&lt;h2 id=&quot;配置config文件&quot;&gt;&lt;a href=&quot;#配置config文件&quot; clas
      
    
    </summary>
    
      <category term="Linux" scheme="http://www.jmideas.cn/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.jmideas.cn/tags/Linux/"/>
    
      <category term="vim" scheme="http://www.jmideas.cn/tags/vim/"/>
    
      <category term="乱码" scheme="http://www.jmideas.cn/tags/%E4%B9%B1%E7%A0%81/"/>
    
      <category term="中文" scheme="http://www.jmideas.cn/tags/%E4%B8%AD%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>会声会影x8安装</title>
    <link href="http://www.jmideas.cn/2016/10/06/%E4%BC%9A%E5%A3%B0%E4%BC%9A%E5%BD%B1x8%E5%AE%89%E8%A3%85/"/>
    <id>http://www.jmideas.cn/2016/10/06/会声会影x8安装/</id>
    <published>2016-10-06T12:35:21.000Z</published>
    <updated>2016-10-06T13:20:04.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="链接地址"><a href="#链接地址" class="headerlink" title="链接地址"></a>链接地址</h1><p><a href="https://yunpan.cn/OcMkej4cRjTbGs" target="_blank" rel="noopener">会声会影x8</a><br> （提取码：e7b1）</p><h1 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h1><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>会声会影属于外国软件，会被杀毒误报，所以安装之前请关掉所有杀毒软件（360，电脑管家，金山毒霸等等），然后再安装。安装完成再打开杀毒就可以了。</p><h2 id="版本的选择"><a href="#版本的选择" class="headerlink" title="版本的选择"></a>版本的选择</h2><p>如果你的操作系统是32位的，请选择32位版本进行安装，如果是64位的操作系统，请选择64位版本进行安装。</p><h2 id="运行安装程序"><a href="#运行安装程序" class="headerlink" title="运行安装程序"></a>运行安装程序</h2><p>双击下载的安装程序，会出现下面的解压画面:</p><p><img src="http://www.huishenghuiying.com.cn/uploads/images/louis/x8anzhuang0609-1.png" alt=""></p><p>然后我们直接单击保存[save]。<br>注意：不要改路径，容易出问题，占用不了多少内存，谢谢合作。</p><h2 id="进行安装"><a href="#进行安装" class="headerlink" title="进行安装"></a>进行安装</h2><p>解压完成后，出现下面的安装界面，按下面进行勾选，然后单击下一步</p><p><img src="http://www.huishenghuiying.com.cn/uploads/images/louis/x8anzhuang0609-5.png" alt=""></p><h2 id="序列号"><a href="#序列号" class="headerlink" title="序列号"></a>序列号</h2><p>接下来会出现下面的画面，用户名，可随意输入， 序列号就下面的这串数字，直接ctrl+c复制，ctrl+v粘贴就好了哦。<br> <code>VS18R22-RF44Q2T-B3YFGS5-GB2C774</code><br><img src="http://www.huishenghuiying.com.cn/uploads/images/louis/x8anzhuang0609-9.PNG" alt=""></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><img src="http://www.huishenghuiying.com.cn/uploads/images/louis/x8anzhuang0609-7.png" alt=""></p><p>接下来，会出现设置安装路径径的对话框，，使用默认的文件夹位置就可以了，然后单击立刻安装</p><p><img src="http://www.huishenghuiying.com.cn/uploads/images/louis/x8anzhuang0609-8.png" alt=""></p><p>最后，安装程序开始复制文件，直到完成后，出现下面界面，单击完成安装！</p><p><img src="http://www.huishenghuiying.com.cn/uploads/images/louis/x8anzhuang0609-10.png" alt=""><br>大功告成</p><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>具体说明上面的链接下载中有详细说明</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;链接地址&quot;&gt;&lt;a href=&quot;#链接地址&quot; class=&quot;headerlink&quot; title=&quot;链接地址&quot;&gt;&lt;/a&gt;链接地址&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://yunpan.cn/OcMkej4cRjTbGs&quot; target=&quot;_blank&quot; rel
      
    
    </summary>
    
      <category term="视频" scheme="http://www.jmideas.cn/categories/%E8%A7%86%E9%A2%91/"/>
    
    
      <category term="实用" scheme="http://www.jmideas.cn/tags/%E5%AE%9E%E7%94%A8/"/>
    
      <category term="视频" scheme="http://www.jmideas.cn/tags/%E8%A7%86%E9%A2%91/"/>
    
      <category term="会声会影" scheme="http://www.jmideas.cn/tags/%E4%BC%9A%E5%A3%B0%E4%BC%9A%E5%BD%B1/"/>
    
  </entry>
  
  <entry>
    <title> win10如何设置软件开机启动</title>
    <link href="http://www.jmideas.cn/2016/09/12/win10%E5%A6%82%E4%BD%95%E8%AE%BE%E7%BD%AE%E8%BD%AF%E4%BB%B6%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8/"/>
    <id>http://www.jmideas.cn/2016/09/12/win10如何设置软件开机启动/</id>
    <published>2016-09-12T07:30:03.000Z</published>
    <updated>2016-09-12T07:49:48.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>刚开始接触win10的朋友肯定不知道在哪里把自己常用的软件设置成开机自启动，因为你根本找不到前面的<code>xp</code> <code>win7</code> <code>win8</code>等里面的启动文件夹。</p><h1 id="工具-原料"><a href="#工具-原料" class="headerlink" title="工具/原料"></a>工具/原料</h1><p>win10系统电脑一台</p><h1 id="方法-步骤"><a href="#方法-步骤" class="headerlink" title="方法/步骤"></a>方法/步骤</h1><p>1.如果想要实现应用程序在所有的用户登录后都能自动启动，就把该应用程序的快捷方式放到“系统启动文件夹”里；<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\ProgramData\Microsoft\Windows\Start Menu\Programs\StartUp</span><br></pre></td></tr></table></figure></p><p><img src="http://d.hiphotos.baidu.com/exp/w=500/sign=5a6702b0b71bb0518f24b328067bda77/a1ec08fa513d2697aafe06cf51fbb2fb4316d877.jpg" alt=""></p><p>2.上面方法有的朋友可能找不到路径，没有关系，你可以把上面的路径直接复制到地址栏里面打开即可，如下图</p><p><img src="http://d.hiphotos.baidu.com/exp/w=500/sign=cc9df09f74cf3bc7e800cdece101babd/9f510fb30f2442a772a7f137d543ad4bd01302f2.jpg" alt=""></p><p>3.同样也可以用系统命令来打开“启动文件夹”，在运行（win+R）里面输入：<code>shell:startup</code></p><p><img src="http://h.hiphotos.baidu.com/exp/w=500/sign=6cd78f4811ce36d3a20483300af23a24/b90e7bec54e736d1184cff9a9f504fc2d46269c0.jpg" alt=""></p><p>4.或者输入：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%programdata%\Microsoft\Windows\Start Menu\Programs\Startup</span><br></pre></td></tr></table></figure></p><p><img src="http://f.hiphotos.baidu.com/exp/w=500/sign=d26bd68d03082838680ddc148898a964/9922720e0cf3d7ca8edf42e4f61fbe096b63a973.jpg" alt=""></p><p>5.上面那种命令都可以打开系统启动文件夹的；同样，打开之后把要启动的软件放进去即可。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;刚开始接触win10的朋友肯定不知道在哪里把自己常用的软件设置成开机自启动，因为你根本找不到前面的&lt;code&gt;xp&lt;/code&gt; &lt;code
      
    
    </summary>
    
      <category term="Windows" scheme="http://www.jmideas.cn/categories/Windows/"/>
    
    
      <category term="实用" scheme="http://www.jmideas.cn/tags/%E5%AE%9E%E7%94%A8/"/>
    
      <category term="windows" scheme="http://www.jmideas.cn/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>Android Studio如何导入第三方库文件</title>
    <link href="http://www.jmideas.cn/2016/09/10/Android-Studio%E5%A6%82%E4%BD%95%E5%AF%BC%E5%85%A5%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93%E6%96%87%E4%BB%B6/"/>
    <id>http://www.jmideas.cn/2016/09/10/Android-Studio如何导入第三方库文件/</id>
    <published>2016-09-10T14:51:33.000Z</published>
    <updated>2016-09-10T16:00:02.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><p>1.首先下载库文件到本地并解压，本文<a href="https://github.com/jfeinstein10/SlidingMenu" target="_blank" rel="noopener">SlidingMenu</a>以为例；</p><p>２.在Android Studio导入Modle，library目录为<code>SlidingMenu-master\library</code></p><p><img src="http://upload-images.jianshu.io/upload_images/1785511-73783300daf57892.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p><img src="http://upload-images.jianshu.io/upload_images/1785511-1485af149d63967b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>切换到Project目录即可看到导入的library:</p><p><img src="http://upload-images.jianshu.io/upload_images/1785511-de563d62edef750f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>３.将library/build.gradle 的 <code>compileSdkVersion</code> <code>buildToolsVersion</code> <code>minSdkVersion</code> <code>targetSdkVersion</code> 设置为app/build.gradle 所相对应的内容，classpath对应于Project下面的build.gradle必须要一致才能成功<br>我的app/build.gradle对应的内容为：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">compileSdkVersion <span class="number">23</span>    </span><br><span class="line">   buildToolsVersion <span class="string">"23.0.3"</span>    </span><br><span class="line"></span><br><span class="line">   minSdkVersion <span class="number">15</span>        </span><br><span class="line">   targetSdkVersion <span class="number">23</span></span><br></pre></td></tr></table></figure><p>Project下面的build.gradle所对应的内容为:(个人感觉这一步可以忽略)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">classpath <span class="string">'com.android.tools.build:gradle:2.1.0-beta1'</span></span><br></pre></td></tr></table></figure><p>设置完后的library/build.gradle的内容为：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">dependencies &#123;    </span><br><span class="line">    compile <span class="string">'com.android.support:support-v4:13.0.0'</span></span><br><span class="line">&#125;</span><br><span class="line">android &#123;    </span><br><span class="line">    compileSdkVersion <span class="number">23</span>    </span><br><span class="line">    buildToolsVersion <span class="string">"23.0.3"</span>    </span><br><span class="line">    defaultConfig &#123;        </span><br><span class="line">        minSdkVersion <span class="number">15</span>        </span><br><span class="line">        targetSdkVersion <span class="number">23</span>    </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>４.然后添加项目依赖，并Clean下项目，或者点击图标<img src="http://upload-images.jianshu.io/upload_images/1785511-c0e322abb2a9583c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p><img src="http://upload-images.jianshu.io/upload_images/1785511-b16c134bb09d4699.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>这时会出现报错</p><p><img src="http://upload-images.jianshu.io/upload_images/1785511-78ae8589f9de500f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>由信息提示可知该方法已经过时，我们只需要双击找到错误位置将<code>FloatMath</code>替换为<code>Math</code>即可，然后重新编译即可成功</p><p><img src="http://upload-images.jianshu.io/upload_images/1785511-00e2bdcb471b71d9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>５.库文件已经导入进来并且没有报错，完成库文件导入</p><h1 id="导入-jar-包及第三方开源库教程"><a href="#导入-jar-包及第三方开源库教程" class="headerlink" title="导入 jar 包及第三方开源库教程"></a>导入 jar 包及第三方开源库教程</h1><p><img src="http://upload-images.jianshu.io/upload_images/1785511-fe90da4ce899eda1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>导入 jar 包的方式非常简单，就是在<code>项目中的 libs 中放入你需要导入的 jar 包，然后右键你的 jar 文件，选择“add as a library”即可在你的项目中使用这个 jar 包了</code>。 这个方式虽然简单，但用处很大，不仅仅能导入一些普通 jar 包，还可以作为一些不支持 Android Studio 的开源库的使用的解决方案，就是说，你把你需要使用的开源库的 jar 包拿出来，导进来即可，因为通常我们使用开源库并不会去修改其源代码。其 jar 包你可以自己用 eclipse 生成，也可以在开源库地址找到，因为一般都会同时提供 release 版本。</p><p>但如果 gradle 中已经有如下代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">compile <span class="title">fileTree</span><span class="params">(include: [<span class="string">'*.jar'</span>], dir: <span class="string">'libs'</span>)</span></span></span><br></pre></td></tr></table></figure><p>就不用再 add 了，Sync 一下 gradle 就可以了。</p><h1 id="代码检测"><a href="#代码检测" class="headerlink" title="代码检测"></a>代码检测</h1><p>1.首先创建一个Activity并将 MainActivity 继承 SlidingActivity 或者 SlidingFragmentActivity，并且OnCreate（）的权限修饰符改为 public</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">SlidingActivity</span> </span>&#123;    </span><br><span class="line">      <span class="meta">@Override</span>    </span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br></pre></td></tr></table></figure><p>2.创建两个布局文件，分别是<code>menu_left.xml</code>和<code>menu_right.xml</code>代表左侧边栏和右侧边栏</p><ul><li>menu_left.xml</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;LinearLayout xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">            android:orientation=<span class="string">"vertical"</span></span><br><span class="line">            android:background=<span class="string">"@color/colorPrimary"</span></span><br><span class="line">            android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">            android:layout_height=<span class="string">"match_parent"</span>&gt;</span><br><span class="line"></span><br><span class="line">  &lt;TextView</span><br><span class="line">      android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">      android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">      android:text=<span class="string">"左侧边栏"</span></span><br><span class="line">      android:textSize=<span class="string">"30sp"</span></span><br><span class="line">      android:id=<span class="string">"@+id/textView"</span>/&gt;</span><br><span class="line">&lt;/LinearLayout&gt;</span><br></pre></td></tr></table></figure><ul><li>menu_right.xml</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;LinearLayout xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">            android:orientation=<span class="string">"vertical"</span></span><br><span class="line">            android:background=<span class="string">"@color/colorAccent"</span></span><br><span class="line">            android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">            android:layout_height=<span class="string">"match_parent"</span>&gt;</span><br><span class="line"></span><br><span class="line">  &lt;TextView</span><br><span class="line">      android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">      android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">      android:text=<span class="string">"右侧边栏"</span></span><br><span class="line">      android:textSize=<span class="string">"30sp"</span></span><br><span class="line">      android:id=<span class="string">"@+id/textView2"</span>/&gt;</span><br><span class="line">&lt;/LinearLayout&gt;</span><br></pre></td></tr></table></figure><p>3.设置左右侧边栏，并设置相关属性，完整代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">SlidingActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">      setContentView(R.layout.activity_main);</span><br><span class="line">      setBehindContentView(R.layout.menu_left);<span class="comment">//左侧边栏</span></span><br><span class="line">      SlidingMenu slidingMenu = getSlidingMenu();</span><br><span class="line">      slidingMenu.setSecondaryMenu(R.layout.menu_right);<span class="comment">//右侧边栏</span></span><br><span class="line">      <span class="comment">//左右同时显示</span></span><br><span class="line">      slidingMenu.setMode(SlidingMenu.LEFT_RIGHT);</span><br><span class="line">  <span class="comment">//默认边界触摸</span></span><br><span class="line">      <span class="comment">//全屏触摸</span></span><br><span class="line">      slidingMenu.setTouchModeAbove(SlidingMenu.TOUCHMODE_FULLSCREEN);</span><br><span class="line">      <span class="comment">//设置屏幕预留宽度</span></span><br><span class="line">      slidingMenu.setBehindOffset(<span class="number">300</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h1><p><img src="http://upload-images.jianshu.io/upload_images/1785511-69e98dc20400ee45.gif?imageMogr2/auto-orient/strip" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;步骤&quot;&gt;&lt;a href=&quot;#步骤&quot; class=&quot;headerlink&quot; title=&quot;步骤&quot;&gt;&lt;/a&gt;步骤&lt;/h1&gt;&lt;p&gt;1.首先下载库文件到本地并解压，本文&lt;a href=&quot;https://github.com/jfeinstein10/SlidingMenu
      
    
    </summary>
    
      <category term="Android" scheme="http://www.jmideas.cn/categories/Android/"/>
    
    
      <category term="Android" scheme="http://www.jmideas.cn/tags/Android/"/>
    
      <category term="问题" scheme="http://www.jmideas.cn/tags/%E9%97%AE%E9%A2%98/"/>
    
      <category term="android studio" scheme="http://www.jmideas.cn/tags/android-studio/"/>
    
      <category term="库文件" scheme="http://www.jmideas.cn/tags/%E5%BA%93%E6%96%87%E4%BB%B6/"/>
    
      <category term="SlidingMenu" scheme="http://www.jmideas.cn/tags/SlidingMenu/"/>
    
  </entry>
  
  <entry>
    <title>Win10商店还不能下载应用？试试这四种方法</title>
    <link href="http://www.jmideas.cn/2016/09/06/Win10%E5%95%86%E5%BA%97%E8%BF%98%E4%B8%8D%E8%83%BD%E4%B8%8B%E8%BD%BD%E5%BA%94%E7%94%A8%EF%BC%9F%E8%AF%95%E8%AF%95%E8%BF%99%E5%9B%9B%E7%A7%8D%E6%96%B9%E6%B3%95/"/>
    <id>http://www.jmideas.cn/2016/09/06/Win10商店还不能下载应用？试试这四种方法/</id>
    <published>2016-09-06T09:37:18.000Z</published>
    <updated>2016-09-06T10:09:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>微软表示，最近出现的Win10商店应用无法下载的问题已经解决，但有些用户在实际操作中发现这个问题并不像微软说得这么乐观，应用仍然无法下载。有四种方法也许可以解决这个问题，感兴趣的朋友可以试试看。</p><h2 id="重新登录win10商店"><a href="#重新登录win10商店" class="headerlink" title="重新登录win10商店"></a>重新登录win10商店</h2><h3 id="打开商店后，点击你的头像"><a href="#打开商店后，点击你的头像" class="headerlink" title="打开商店后，点击你的头像"></a>打开商店后，点击你的头像</h3><p><img src="http://img.ithome.com/newsuploadfiles/2015/8/20150815_175505_594.jpg" alt=""></p><h3 id="点击你的账户名称，进入账户页面"><a href="#点击你的账户名称，进入账户页面" class="headerlink" title="点击你的账户名称，进入账户页面"></a>点击你的账户名称，进入账户页面</h3><p><img src="http://img.ithome.com/newsuploadfiles/2015/8/20150815_175615_30.jpg" alt=""></p><h3 id="点击你的账户名，然后点击注销"><a href="#点击你的账户名，然后点击注销" class="headerlink" title="点击你的账户名，然后点击注销"></a>点击你的账户名，然后点击注销</h3><p><img src="http://img.ithome.com/newsuploadfiles/2015/8/20150815_175702_444.jpg" alt=""></p><h3 id="再次点击头像图标，然后点击“登录”"><a href="#再次点击头像图标，然后点击“登录”" class="headerlink" title="再次点击头像图标，然后点击“登录”"></a>再次点击头像图标，然后点击“登录”</h3><p><img src="http://img.ithome.com/newsuploadfiles/2015/8/20150815_175815_386.jpg" alt=""></p><h3 id="点击你的账户（一般第一个就是）进行登录"><a href="#点击你的账户（一般第一个就是）进行登录" class="headerlink" title="点击你的账户（一般第一个就是）进行登录"></a>点击你的账户（一般第一个就是）进行登录</h3><p>然后你再尝试下载应用，问题可能就会解决，如果无效，可再尝试下一种方法</p><h2 id="重置win10商店缓存"><a href="#重置win10商店缓存" class="headerlink" title="重置win10商店缓存"></a>重置win10商店缓存</h2><h3 id="在Cortana搜索栏输入wsreset，然后选择第一项"><a href="#在Cortana搜索栏输入wsreset，然后选择第一项" class="headerlink" title="在Cortana搜索栏输入wsreset，然后选择第一项"></a>在Cortana搜索栏输入wsreset，然后选择第一项</h3><p><img src="http://img.ithome.com/newsuploadfiles/2015/8/20150815_180011_694.jpg" alt=""></p><h3 id="重置命令自动运行，并打开win10商店"><a href="#重置命令自动运行，并打开win10商店" class="headerlink" title="重置命令自动运行，并打开win10商店"></a>重置命令自动运行，并打开win10商店</h3><p><img src="http://img.ithome.com/newsuploadfiles/2015/8/20150815_180053_998.jpg" alt=""><br>此时再次尝试下载，问题也许就会解决，如果还不管用 ，可再次尝试第三种方法。</p><h2 id="使用“疑难解答”"><a href="#使用“疑难解答”" class="headerlink" title="使用“疑难解答”"></a>使用“疑难解答”</h2><h3 id="在Cortana搜索栏输入“疑难解答”，选择第一项"><a href="#在Cortana搜索栏输入“疑难解答”，选择第一项" class="headerlink" title="在Cortana搜索栏输入“疑难解答”，选择第一项"></a>在Cortana搜索栏输入“疑难解答”，选择第一项</h3><p><img src="http://img.ithome.com/newsuploadfiles/2015/8/20150815_180229_601.jpg" alt=""></p><h3 id="点击下方“使用Windows更新解决问题”"><a href="#点击下方“使用Windows更新解决问题”" class="headerlink" title="点击下方“使用Windows更新解决问题”"></a>点击下方“使用Windows更新解决问题”</h3><p><img src="http://img.ithome.com/newsuploadfiles/2015/8/20150815_180245_123.jpg" alt=""></p><h3 id="按照提示点击“下一步”就可以，中间如果要求管理员权限，就点击“尝试以管理员身份进行疑难解答”"><a href="#按照提示点击“下一步”就可以，中间如果要求管理员权限，就点击“尝试以管理员身份进行疑难解答”" class="headerlink" title="按照提示点击“下一步”就可以，中间如果要求管理员权限，就点击“尝试以管理员身份进行疑难解答”"></a>按照提示点击“下一步”就可以，中间如果要求管理员权限，就点击“尝试以管理员身份进行疑难解答”</h3><p><img src="http://img.ithome.com/newsuploadfiles/2015/8/20150815_180351_698.jpg" alt=""></p><p><img src="http://img.ithome.com/newsuploadfiles/2015/8/20150815_180358_248.jpg" alt=""></p><p><img src="http://img.ithome.com/newsuploadfiles/2015/8/20150815_180448_694.jpg" alt=""></p><h3 id="Win10会自动搜索问题并尝试解决，完成之后，会给出相应结果（上图只是举例，实际结果可能不同）"><a href="#Win10会自动搜索问题并尝试解决，完成之后，会给出相应结果（上图只是举例，实际结果可能不同）" class="headerlink" title="Win10会自动搜索问题并尝试解决，完成之后，会给出相应结果（上图只是举例，实际结果可能不同）"></a>Win10会自动搜索问题并尝试解决，完成之后，会给出相应结果（上图只是举例，实际结果可能不同）</h3><p>这种方法算是比较通用，哪怕是不能解决商店问题，可能也会解决一些其他问题，不妨一试。如果这种方法解决不了，可以尝试最后的“终极方法”。</p><h2 id="重置Win10更新"><a href="#重置Win10更新" class="headerlink" title="重置Win10更新"></a>重置Win10更新</h2><h3 id="1-在Cortana搜索栏输入“服务”，选择第一个"><a href="#1-在Cortana搜索栏输入“服务”，选择第一个" class="headerlink" title="1.在Cortana搜索栏输入“服务”，选择第一个"></a>1.在Cortana搜索栏输入“服务”，选择第一个</h3><p><img src="http://img.ithome.com/newsuploadfiles/2015/8/20150815_180943_968.jpg" alt=""></p><h3 id="找到Windows-Update服务，并将其停止（可在服务名称上点右键，选择“停止”；或点击左侧的“停止此服务”）"><a href="#找到Windows-Update服务，并将其停止（可在服务名称上点右键，选择“停止”；或点击左侧的“停止此服务”）" class="headerlink" title="找到Windows Update服务，并将其停止（可在服务名称上点右键，选择“停止”；或点击左侧的“停止此服务”）"></a>找到Windows Update服务，并将其停止（可在服务名称上点右键，选择“停止”；或点击左侧的“停止此服务”）</h3><p><img src="http://img.ithome.com/newsuploadfiles/2015/8/20150815_181055_868.jpg" alt=""></p><h3 id="然后进入C-windows-，找到SoftwareDistribution文件夹，并将其重命名为SoftwareDistribution-old（只要名称变了就行，不必非要是这个）"><a href="#然后进入C-windows-，找到SoftwareDistribution文件夹，并将其重命名为SoftwareDistribution-old（只要名称变了就行，不必非要是这个）" class="headerlink" title="然后进入C:\windows\，找到SoftwareDistribution文件夹，并将其重命名为SoftwareDistribution.old（只要名称变了就行，不必非要是这个）"></a>然后进入C:\windows\，找到SoftwareDistribution文件夹，并将其重命名为SoftwareDistribution.old（只要名称变了就行，不必非要是这个）</h3><p><img src="http://img.ithome.com/newsuploadfiles/2015/8/20150815_181239_556.jpg" alt=""></p><h3 id="重新启动Windows-Update服务"><a href="#重新启动Windows-Update服务" class="headerlink" title="重新启动Windows Update服务"></a>重新启动Windows Update服务</h3><p><img src="http://img.ithome.com/newsuploadfiles/2015/8/20150815_181307_300.jpg" alt=""></p><p>此时再次打开商店应用，问题应该就会解决了。不过这种方法属于“猛剂”，前三种方法不管用时再用比较安全。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;微软表示，最近出现的Win10商店应用无法下载的问题已经解决，但有些用户在实际操作中发现这个问题并不像微软说得这么乐观，应用仍然无法下载。有四种方法也许可以解决这个问题，感兴趣的朋友可以试试看。&lt;/p&gt;
&lt;h2 id=&quot;重新登录win10商店&quot;&gt;&lt;a href=&quot;#重新登录
      
    
    </summary>
    
      <category term="实用" scheme="http://www.jmideas.cn/categories/%E5%AE%9E%E7%94%A8/"/>
    
    
      <category term="问题" scheme="http://www.jmideas.cn/tags/%E9%97%AE%E9%A2%98/"/>
    
      <category term="win10" scheme="http://www.jmideas.cn/tags/win10/"/>
    
  </entry>
  
  <entry>
    <title>如何使用Git上传项目代码到github</title>
    <link href="http://www.jmideas.cn/2016/08/29/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Git%E4%B8%8A%E4%BC%A0%E9%A1%B9%E7%9B%AE%E4%BB%A3%E7%A0%81%E5%88%B0github/"/>
    <id>http://www.jmideas.cn/2016/08/29/如何使用Git上传项目代码到github/</id>
    <published>2016-08-29T04:57:58.000Z</published>
    <updated>2016-08-29T05:59:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>github是一个基于git的代码托管平台，付费用户可以建私人仓库，我们一般的免费用户只能使用公共仓库，也就是代码要公开。这对于一般人来说公共仓库就已经足够了。</p><p><img src="http://1ke.co/files/course/2015/06-10/18421136f1a3134980.png?4.9.3" alt=""></p><h1 id="git客户端"><a href="#git客户端" class="headerlink" title="git客户端"></a>git客户端</h1><h2 id="客户端下载安装"><a href="#客户端下载安装" class="headerlink" title="客户端下载安装"></a>客户端下载安装</h2><p>github是服务端，要想在自己电脑上使用git我们还需要一个git客户端，</p><p>windows用户请下载<a href="https://git-scm.com/download/win" target="_blank" rel="noopener">『https://git-scm.com/download/win』</a></p><p>mac用户请下载<a href="http://code.google.com/p/tortoisegit/" target="_blank" rel="noopener">『  http://code.google.com/p/tortoisegit/』</a></p><p>一路next，安装成功后， 回到C盘，或任何文件夹下，点鼠标右键会多出一些菜单<br>如 Git Init Hear、Git Bash、Git Gui ， 说明安装成功。</p><h2 id="配置Git"><a href="#配置Git" class="headerlink" title="配置Git"></a>配置Git</h2><p>为了把本地的仓库传到github，还需要配置ssh key。</p><p>在本地创建ssh key</p><p>后面的<a href="mailto:your_email@youremail.com" target="_blank" rel="noopener">your_email@youremail.com</a>改为你的邮箱。我的邮箱是<a href="mailto:lilu@1ke.co" target="_blank" rel="noopener">lilu@1ke.co</a>，也是在github上注册的那个邮箱：</p><p><img src="http://1ke.co/files/course/2015/06-10/18094049ed5a347715.png?4.9.3" alt=""></p><p>然后连按三次回车即可</p><p>最后查看ssh key文件。 可直接搜索本地.ssh文件 </p><p><img src="http://1ke.co/files/course/2015/06-10/18003428276f033698.png?4.9.3" alt=""><br>rsa是私有密钥，pub为公有密钥</p><p>记事本打开id_rsa.pub，复制里面的key。里面的key是一对看不懂的字符数字组合，不用管它，直接复制。</p><p>回到github网站，进入Account Settings，左边选择SSH Keys，Add SSH Key,</p><p><img src="http://1ke.co/files/course/2015/06-10/18040663f13e163573.png?4.9.3" alt=""></p><p>title随便填，粘贴key。</p><p><img src="http://1ke.co/files/course/2015/06-10/18124918c556633334.png?4.9.3" alt=""></p><p>最后验证是否成功，在git bash下输入</p><pre><code>$ ssh -T git@github.com</code></pre><p>回车就会看到：<br><img src="http://1ke.co/files/course/2015/06-10/18141358d223257547.png?4.9.3" alt=""></p><pre><code>$ git config --global user.name &quot;your name&quot;$ git config --global user.email &quot;your_email@youremail.com&quot;</code></pre><p>接下来我们要做的就是把本地仓库传到github上去，在此之前还需要设置username和email，因为github每次commit都会记录他们</p><h1 id="注册账户以及创建仓库"><a href="#注册账户以及创建仓库" class="headerlink" title="注册账户以及创建仓库"></a>注册账户以及创建仓库</h1><p>这部分不过多赘述<br>github官网地址<a href="https://github.com" target="_blank" rel="noopener">『https://github.com』</a></p><p>注册成功之后，在页面上方用户菜单上选择 “+”-&gt;New repository 创建一个新的仓库</p><p><img src="http://1ke.co/files/course/2015/06-10/17095640f213924273.png?4.9.3" alt=""></p><p>为仓库取一个名字，点击创建仓库按钮 你将成功创建一个仓库</p><p><img src="http://1ke.co/files/course/2015/06-10/17132882066d167248.png?4.9.3" alt=""></p><h1 id="提交上传"><a href="#提交上传" class="headerlink" title="提交上传"></a>提交上传</h1><p>复制刚刚创建的仓库ssh地址</p><pre><code>git@github.com:JamesLiuquan/GitTest2.git</code></pre><p>选择一个需要上传的文件夹，右键Git Bash Here</p><p>然后输入以下命令</p><pre><code>$ git init</code></pre><p><img src="http://1ke.co/files/course/2015/06-10/18283539cfad664272.png?4.9.3" alt=""></p><pre><code>$ git remote add origin git@github.com:JamesLiuquan/GitTest2.git$ git add .</code></pre><p><strong>注意add与.之间的空格</strong></p><pre><code>$ git commit -m &quot;first commit&quot;</code></pre><p><strong>first commit为每次提交的说明可自己修改</strong></p><pre><code>$ git push origin master</code></pre><p>git push命令会将本地仓库推送到远程服务器。</p><p>等待提交成功，成功后可去github上查看以下</p><h1 id="最后说明"><a href="#最后说明" class="headerlink" title="最后说明"></a>最后说明</h1><p>创建新仓库时，REMADE前面不要勾选</p><h2 id="gitignore文件"><a href="#gitignore文件" class="headerlink" title="gitignore文件"></a>gitignore文件</h2><p>.gitignore顾名思义就是告诉git需要忽略的文件，这是一个很重要并且很实用的文件。一般我们写完代码后会执行编译、调试等操作，这期间会产生很多中间文件和可执行文件，这些都不是代码文件，是不需要git来管理的。我们在git status的时候会看到很多这样的文件，如果用git add -A来添加的话会把他们都加进去，而手动一个个添加的话也太麻烦了。这时我们就需要.gitignore了。</p><h2 id="Git命令"><a href="#Git命令" class="headerlink" title="Git命令"></a>Git命令</h2><h3 id="查看、添加、提交、删除、找回，重置修改文件"><a href="#查看、添加、提交、删除、找回，重置修改文件" class="headerlink" title="查看、添加、提交、删除、找回，重置修改文件"></a>查看、添加、提交、删除、找回，重置修改文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">git help &lt;command&gt; # 显示command的help</span><br><span class="line"></span><br><span class="line">git show # 显示某次提交的内容 git show $id</span><br><span class="line"></span><br><span class="line">git co -- &lt;file&gt; # 抛弃工作区修改</span><br><span class="line"></span><br><span class="line">git co . # 抛弃工作区修改</span><br><span class="line"></span><br><span class="line">git add &lt;file&gt; # 将工作文件修改提交到本地暂存区</span><br><span class="line"></span><br><span class="line">git add . # 将所有修改过的工作文件提交暂存区</span><br><span class="line"></span><br><span class="line">git rm &lt;file&gt; # 从版本库中删除文件</span><br><span class="line"></span><br><span class="line">git rm &lt;file&gt; --cached # 从版本库中删除文件，但不删除文件</span><br><span class="line"></span><br><span class="line">git reset &lt;file&gt; # 从暂存区恢复到工作文件</span><br><span class="line"></span><br><span class="line">git reset -- . # 从暂存区恢复到工作文件</span><br><span class="line"></span><br><span class="line">git reset --hard # 恢复最近一次提交过的状态，即放弃上次提交后的所有本次修改</span><br><span class="line"></span><br><span class="line">git ci &lt;file&gt; git ci . git ci -a # 将git add, git rm和git ci等操作都合并在一起做　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　git ci -am &quot;some comments&quot;</span><br><span class="line"></span><br><span class="line">git ci --amend # 修改最后一次提交记录</span><br><span class="line"></span><br><span class="line">git revert &lt;$id&gt; # 恢复某次提交的状态，恢复动作本身也创建次提交对象</span><br><span class="line"></span><br><span class="line">git revert HEAD # 恢复最后一次提交的状态</span><br></pre></td></tr></table></figure><h3 id="查看文件diff"><a href="#查看文件diff" class="headerlink" title="查看文件diff"></a>查看文件diff</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">git diff &lt;file&gt; # 比较当前文件和暂存区文件差异 git diff</span><br><span class="line"></span><br><span class="line">git diff &lt;id1&gt;&lt;id2&gt; # 比较两次提交之间的差异</span><br><span class="line"></span><br><span class="line">git diff &lt;branch1&gt;..&lt;branch2&gt; # 在两个分支之间比较</span><br><span class="line"></span><br><span class="line">git diff --staged # 比较暂存区和版本库差异</span><br><span class="line"></span><br><span class="line">git diff --cached # 比较暂存区和版本库差异</span><br><span class="line"></span><br><span class="line">git diff --stat # 仅仅比较统计信息</span><br></pre></td></tr></table></figure><h3 id="查看提交记录"><a href="#查看提交记录" class="headerlink" title="查看提交记录"></a>查看提交记录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">git log git log &lt;file&gt; # 查看该文件每次提交记录</span><br><span class="line"></span><br><span class="line">git log -p &lt;file&gt; # 查看每次详细修改内容的diff</span><br><span class="line"></span><br><span class="line">git log -p -2 # 查看最近两次详细修改内容的diff</span><br><span class="line"></span><br><span class="line">git log --stat #查看提交统计信息</span><br><span class="line"></span><br><span class="line">tig</span><br><span class="line">Mac上可以使用tig代替diff和log，brew install tig</span><br></pre></td></tr></table></figure><h3 id="Git-本地分支管理"><a href="#Git-本地分支管理" class="headerlink" title="Git 本地分支管理"></a>Git 本地分支管理</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">查看、切换、创建和删除分支</span><br><span class="line"></span><br><span class="line">git br -r # 查看远程分支</span><br><span class="line"></span><br><span class="line">git br &lt;new_branch&gt; # 创建新的分支</span><br><span class="line"></span><br><span class="line">git br -v # 查看各个分支最后提交信息</span><br><span class="line"></span><br><span class="line">git br --merged # 查看已经被合并到当前分支的分支</span><br><span class="line"></span><br><span class="line">git br --no-merged # 查看尚未被合并到当前分支的分支</span><br><span class="line"></span><br><span class="line">git co &lt;branch&gt; # 切换到某个分支</span><br><span class="line"></span><br><span class="line">git co -b &lt;new_branch&gt; # 创建新的分支，并且切换过去</span><br><span class="line"></span><br><span class="line">git co -b &lt;new_branch&gt; &lt;branch&gt; # 基于branch创建新的new_branch</span><br><span class="line"></span><br><span class="line">git co $id # 把某次历史提交记录checkout出来，但无分支信息，切换到其他分支会自动删除</span><br><span class="line"></span><br><span class="line">git co $id -b &lt;new_branch&gt; # 把某次历史提交记录checkout出来，创建成一个分支</span><br><span class="line"></span><br><span class="line">git br -d &lt;branch&gt; # 删除某个分支</span><br><span class="line"></span><br><span class="line">git br -D &lt;branch&gt; # 强制删除某个分支 (未被合并的分支被删除的时候需要强制)</span><br></pre></td></tr></table></figure><h3 id="分支合并和rebase"><a href="#分支合并和rebase" class="headerlink" title="分支合并和rebase"></a>分支合并和rebase</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git merge &lt;branch&gt; # 将branch分支合并到当前分支</span><br><span class="line"></span><br><span class="line">git merge origin/master --no-ff # 不要Fast-Foward合并，这样可以生成merge提交</span><br><span class="line"></span><br><span class="line">git rebase master &lt;branch&gt; # 将master rebase到branch，相当于： git co &lt;branch&gt; &amp;&amp; git rebase master &amp;&amp; git co master &amp;&amp; git merge &lt;branch&gt;</span><br></pre></td></tr></table></figure><h3 id="Git补丁管理-方便在多台机器上开发同步时用"><a href="#Git补丁管理-方便在多台机器上开发同步时用" class="headerlink" title="Git补丁管理(方便在多台机器上开发同步时用)"></a>Git补丁管理(方便在多台机器上开发同步时用)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git diff &gt; ../sync.patch # 生成补丁</span><br><span class="line"></span><br><span class="line">git apply ../sync.patch # 打补丁</span><br><span class="line"></span><br><span class="line">git apply --check ../sync.patch #测试补丁能否成功</span><br></pre></td></tr></table></figure><h3 id="Git暂存管理"><a href="#Git暂存管理" class="headerlink" title="Git暂存管理"></a>Git暂存管理</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git stash # 暂存</span><br><span class="line"></span><br><span class="line">git stash list # 列所有stash</span><br><span class="line"></span><br><span class="line">git stash apply # 恢复暂存的内容</span><br><span class="line"></span><br><span class="line">git stash drop # 删除暂存区</span><br></pre></td></tr></table></figure><h3 id="Git远程分支管理"><a href="#Git远程分支管理" class="headerlink" title="Git远程分支管理"></a>Git远程分支管理</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">git pull # 抓取远程仓库所有分支更新并合并到本地</span><br><span class="line"></span><br><span class="line">git pull --no-ff # 抓取远程仓库所有分支更新并合并到本地，不要快进合并</span><br><span class="line"></span><br><span class="line">git fetch origin # 抓取远程仓库更新</span><br><span class="line"></span><br><span class="line">git merge origin/master # 将远程主分支合并到本地当前分支</span><br><span class="line"></span><br><span class="line">git co --track origin/branch # 跟踪某个远程分支创建相应的本地分支</span><br><span class="line"></span><br><span class="line">git co -b &lt;local_branch&gt; origin/&lt;remote_branch&gt; # 基于远程分支创建本地分支，功能同上</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">git push # push所有分支</span><br><span class="line"></span><br><span class="line">git push origin master # 将本地主分支推到远程主分支</span><br><span class="line"></span><br><span class="line">git push -u origin master # 将本地主分支推到远程(如无远程主分支则创建，用于初始化远程仓库)</span><br><span class="line"></span><br><span class="line">git push origin &lt;local_branch&gt; # 创建远程分支， origin是远程仓库名</span><br><span class="line"></span><br><span class="line">git push origin &lt;local_branch&gt;:&lt;remote_branch&gt; # 创建远程分支</span><br><span class="line"></span><br><span class="line">git push origin :&lt;remote_branch&gt; #先删除本地分支(git br -d &lt;branch&gt;)，然后再push删除远程分支</span><br></pre></td></tr></table></figure><h3 id="Git远程仓库管理"><a href="#Git远程仓库管理" class="headerlink" title="Git远程仓库管理"></a>Git远程仓库管理</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git remote -v # 查看远程服务器地址和仓库名称</span><br><span class="line"></span><br><span class="line">git remote show origin # 查看远程服务器仓库状态</span><br><span class="line"></span><br><span class="line">git remote add origin git@ github:robbin/robbin_site.git # 添加远程仓库地址</span><br><span class="line"></span><br><span class="line">git remote set-url origin git@ github.com:robbin/robbin_site.git # 设置远程仓库地址(用于修改远程仓库地址) git remote rm &lt;repository&gt; # 删除远程仓库</span><br></pre></td></tr></table></figure><h3 id="创建远程仓库"><a href="#创建远程仓库" class="headerlink" title="创建远程仓库"></a>创建远程仓库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">git clone --bare robbin_site robbin_site.git # 用带版本的项目创建纯版本仓库</span><br><span class="line"></span><br><span class="line">scp -r my_project.git git@ git.csdn.net:~ # 将纯仓库上传到服务器上</span><br><span class="line"></span><br><span class="line">mkdir robbin_site.git &amp;&amp; cd robbin_site.git &amp;&amp; git --bare init # 在服务器创建纯仓库</span><br><span class="line"></span><br><span class="line">git remote add origin git@ github.com:robbin/robbin_site.git # 设置远程仓库地址</span><br><span class="line"></span><br><span class="line">git push -u origin master # 客户端首次提交</span><br><span class="line"></span><br><span class="line">git push -u origin develop # 首次将本地develop分支提交到远程develop分支，并且track</span><br><span class="line"></span><br><span class="line">git remote set-head origin master # 设置远程仓库的HEAD指向master分支</span><br></pre></td></tr></table></figure><h3 id="也可以命令设置跟踪远程库和本地库"><a href="#也可以命令设置跟踪远程库和本地库" class="headerlink" title="也可以命令设置跟踪远程库和本地库"></a>也可以命令设置跟踪远程库和本地库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">git branch --set-upstream master origin/master</span><br><span class="line"></span><br><span class="line">git branch --set-upstream develop origin/develop</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;github是一个基于git的代码托管平台，付费用户可以建私人仓库，我们一般的免费用户只能使用公共仓库，也就是代码要公开。这对于一般人来说公共仓库就已经足够了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://1ke.co/files/course/2015/06-10/1
      
    
    </summary>
    
      <category term="实用" scheme="http://www.jmideas.cn/categories/%E5%AE%9E%E7%94%A8/"/>
    
    
      <category term="实用" scheme="http://www.jmideas.cn/tags/%E5%AE%9E%E7%94%A8/"/>
    
      <category term="git" scheme="http://www.jmideas.cn/tags/git/"/>
    
      <category term="github" scheme="http://www.jmideas.cn/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>Fragment所遇见的一些问题</title>
    <link href="http://www.jmideas.cn/2016/08/29/Fragment%E6%89%80%E9%81%87%E8%A7%81%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/"/>
    <id>http://www.jmideas.cn/2016/08/29/Fragment所遇见的一些问题/</id>
    <published>2016-08-28T16:30:57.000Z</published>
    <updated>2016-08-29T02:45:54.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Fragment简介"><a href="#Fragment简介" class="headerlink" title="Fragment简介"></a>Fragment简介</h1><p><strong>Fragment</strong>是Android3.0引入的API，号称是为了解决屏幕碎片化和帮助重用代码的构造。中文翻译为<em>碎片、片段</em>，或者理解成<em>子Activity</em>，相比Activity更轻量级、更灵活，使用姿势一般有以下2种：</p><p>1.静态写在xml中，就和我们使用一般的widget一样，如下：</p><p><img src="http://upload-images.jianshu.io/upload_images/1737966-8a6aa72ad923ef4f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p><center> <em>写在act的xml布局文件中</em><center></center></center></p><p>2.在代码里动态生成，添加、删除等等，代码如下：<br><img src="http://upload-images.jianshu.io/upload_images/1737966-2d541a9e56d7d425.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p><center> <em>通过代码添加</em><center></center></center></p><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><h2 id="getActivity-空指针（我遇到的第一个坑）"><a href="#getActivity-空指针（我遇到的第一个坑）" class="headerlink" title="getActivity()空指针（我遇到的第一个坑）"></a>getActivity()空指针（我遇到的第一个坑）</h2><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>可能你遇到过getActivity()返回null，或者平时运行完好的代码，在“内存重启”之后，调用getActivity()的地方却返回null，报了空指针异常。</p><p>大多数情况下的原因：你在调用了getActivity()时，当前的Fragment已经onDetach()了宿主Activity。</p><p>比如：你在pop了Fragment之后，该Fragment的异步任务仍然在执行，并且在执行完成后调用了getActivity()方法，这样就会空指针。</p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p><strong>更”安全”的方法：</strong>(对于Fragment已经onDetach这种情况，我们应该避免在这之后再去调用宿主Activity对象，比如取消这些异步任务，但我们的团队可能会有粗心大意的情况，所以下面给出的这个方案会保证安全)</p><p>在Fragment基类里设置一个Activity mActivity的全局变量，在onAttach(Activity activity)里赋值，使用mActivity代替getActivity()，保证Fragment即使在onDetach后，仍持有Activity的引用（有引起内存泄露的风险，但是相比空指针闪退，这种做法“安全”些），即：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> Activity mActivity;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAttach</span><span class="params">(Activity activity)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onAttach(activity);</span><br><span class="line">    <span class="keyword">this</span>.mActivity = activity;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*  如果你用了support 23的库，上面的方法会提示过时，有强迫症的小伙伴，可以用下面的方法代替</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAttach</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onAttach(context);</span><br><span class="line">    <span class="keyword">this</span>.mActivity = (Activity)context;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="其他坑请见："><a href="#其他坑请见：" class="headerlink" title="其他坑请见："></a>其他坑请见：</h2><p> <a href="http://www.jianshu.com/p/d9143a92ad94" target="_blank" rel="noopener">『Fragment全解析系列（一）：那些年踩过的坑』</a></p><p> <a href="http://www.jianshu.com/p/fd71d65f0ec6" target="_blank" rel="noopener">『Fragment全解析系列（二）：正确的使用姿势』</a></p><p> <a href="http://www.jianshu.com/p/38f7994faa6b" target="_blank" rel="noopener">『Fragment之我的解决方案：Fragmentation』</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Fragment简介&quot;&gt;&lt;a href=&quot;#Fragment简介&quot; class=&quot;headerlink&quot; title=&quot;Fragment简介&quot;&gt;&lt;/a&gt;Fragment简介&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;Fragment&lt;/strong&gt;是Android3.0引入
      
    
    </summary>
    
      <category term="Android" scheme="http://www.jmideas.cn/categories/Android/"/>
    
    
      <category term="Android" scheme="http://www.jmideas.cn/tags/Android/"/>
    
      <category term="问题" scheme="http://www.jmideas.cn/tags/%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>Markdown用法</title>
    <link href="http://www.jmideas.cn/2016/08/28/Markdown%E7%94%A8%E6%B3%95/"/>
    <id>http://www.jmideas.cn/2016/08/28/Markdown用法/</id>
    <published>2016-08-28T11:16:59.000Z</published>
    <updated>2016-08-28T13:40:18.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="开场白"><a href="#开场白" class="headerlink" title="开场白"></a>开场白</h2><h3 id="为什么使用Markdown"><a href="#为什么使用Markdown" class="headerlink" title="为什么使用Markdown"></a>为什么使用Markdown</h3><p><a href="http://www.jianshu.com/p/qqGjLN" target="_blank" rel="noopener">『为什么作家应该用 Markdown 保存自己的文稿』</a></p><p><a href="http://www.jianshu.com/p/PpDNMG" target="_blank" rel="noopener">『Markdown写作浅谈』</a></p><p>看完这两篇文章后，总结Markdown优点如下：</p><ul><li>纯文本，所以兼容性极强，可以用所有文本编辑器打开。</li><li>让你专注于文字而不是排版。</li><li>格式转换方便，Markdown 的文本你可以轻松转换为 html、电子书等。</li><li>Markdown 的标记语法有极好的可读性。</li></ul><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><h3 id="MarkdownPad-Windows"><a href="#MarkdownPad-Windows" class="headerlink" title="MarkdownPad (Windows)"></a>MarkdownPad (Windows)</h3><p><img src="http://cms.csdnimg.cn/article/201405/05/53675ce57a699.jpg" alt=""></p><p>用户可以通过键盘快捷键和工具栏按钮来使用或者移除 Markdown 格式。MarkdownPad左右栏的分割方式令用户可以实时看到 HTML 格式的 Markdown 文档。<br>下载地址： <a href="http://markdownpad.com/" target="_blank" rel="noopener">http://markdownpad.com/</a></p><h3 id="Mou-Mac"><a href="#Mou-Mac" class="headerlink" title="Mou(Mac)"></a>Mou(Mac)</h3><p><img src="http://cms.csdnimg.cn/article/201405/05/53675ec8c78fb.jpg" alt=""><br>Mou 是 Mac下杰出的 Markdown 编辑器，提供语法高亮、在线预览、同步滚动、全屏模式，支持自定保存、自动匹配，允许自定义主题，支持 CSS，HTML 和 PDF 导出等。<br>下载地址： <a href="http://mouapp.com/" target="_blank" rel="noopener">http://mouapp.com/</a> </p><h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><p>这是最为常用的格式，在平时常用的的文本编辑器中大多是这样实现的：输入文本、选中文本、设置标题格式。</p><p>而在 Markdown 中，你只需要在文本前面加上 # 即可，同理、你还可以增加二级标题、三级标题、四级标题、五级标题和六级标题，总共六级，只需要增加  # 即可，标题字号相应降低。例如：</p><pre><code># 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题</code></pre><p>注：# 和「一级标题」之间建议保留一个字符的空格。</p><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>列表格式也很常用，在 Markdown 中，你只需要在文字前面加上<code>-</code>就可以了，例如：</p><pre><code>- 文本1- 文本2- 文本3</code></pre><p>如果你希望有序列表，也可以在文字前面加上<code>1. 2. 3.</code>就可以了，例如：</p><pre><code>1. 文本12. 文本23. 文本3</code></pre><p>注：“-、1.”和文本之间要保留一个字符的空格。</p><h3 id="链接和图片"><a href="#链接和图片" class="headerlink" title="链接和图片"></a>链接和图片</h3><p>在 Markdown 中，插入链接不需要其他按钮，你只需要使用    <code>[显示文本](链接地址)</code>这样的语法即可，例如：</p><pre><code>[github](https://github.com)</code></pre><p>在 Markdown 中，插入图片不需要其他按钮，你只需要使用 </p><pre><code>![](图片链接地址) </code></pre><p>这样的语法即可，例如：</p><pre><code>![](http://cms.csdnimg.cn/article/201405/05/53675ce57a699.jpg)</code></pre><p>注：插入图片的语法和链接的语法很像，只是前面多了一个 ！。</p><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><p>有时候，文章需要引用一些别处的内容，以支持自己的观点。<br>语法很简单，在一行的顶格使用英文的大于符号 &gt; ，然后在其后跟上需要引用的内容即可。<br>当然，同标题一样，这种引用也是可以多个级别的。并且在该语法范畴中，同时也可以支持其他语法。<br><img src="https://shiminblog.github.io/assets/MarkDown/yinyong.png" alt=""></p><p>注：&gt; 和文本之间要保留一个字符的空格。</p><h3 id="粗体和斜体"><a href="#粗体和斜体" class="headerlink" title="粗体和斜体"></a>粗体和斜体</h3><p>Markdown 的粗体和斜体也非常简单，用两个<code>*</code>包含一段文本就是粗体的语法，用一个 <code>*</code>包含一段文本就是斜体的语法。</p><h3 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h3><p>如果对某一个词组、某一个字进行强调，可以使用一对 <code></code> ` (键盘波浪线按键处)将内容包括起来</p><h3 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h3><p>如果需要分割线，请连续使用三个 * 或者 三个 _ 即可。<br><img src="https://shiminblog.github.io/assets/MarkDown/fenge.png" alt=""></p><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><pre><code>| Tables        | Are           | Cool  || ------------- |:-------------:| -----:|| col 3 is      | right-aligned | $1600 || col 2 is      | centered      |   $12 || zebra stripes | are neat      |    $1 |</code></pre><table><thead><tr><th>Tables</th><th style="text-align:center">Are</th><th style="text-align:right">Cool</th></tr></thead><tbody><tr><td>col 3 is</td><td style="text-align:center">right-aligned</td><td style="text-align:right">$1600</td></tr><tr><td>col 2 is</td><td style="text-align:center">centered</td><td style="text-align:right">$12</td></tr><tr><td>zebra stripes</td><td style="text-align:center">are neat</td><td style="text-align:right">$1</td></tr></tbody></table><pre><code>dog | bird | cat----|------|----foo | foo  | foobar | bar  | barbaz | baz  | baz</code></pre><table><thead><tr><th>dog</th><th>bird</th><th>cat</th></tr></thead><tbody><tr><td>foo</td><td>foo</td><td>foo</td></tr><tr><td>bar</td><td>bar</td><td>bar</td></tr><tr><td>baz</td><td>baz</td><td>baz</td></tr></tbody></table><h3 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h3><p>如果有些字符，比如 # 在某些情况下需要连续又需要显示出来其中的一个，则使用反斜杠即可转义。</p><h3 id="显示链接中带括号的图片"><a href="#显示链接中带括号的图片" class="headerlink" title="显示链接中带括号的图片"></a>显示链接中带括号的图片</h3><pre><code>![][1][1]: http://latex.codecogs.com/gif.latex?\prod%20\(n_{i}\)+1</code></pre><h3 id="最后总结"><a href="#最后总结" class="headerlink" title="最后总结"></a>最后总结</h3><p><a href="http://wowubuntu.com/markdown/" target="_blank" rel="noopener">『Markdown 语法说明』</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;开场白&quot;&gt;&lt;a href=&quot;#开场白&quot; class=&quot;headerlink&quot; title=&quot;开场白&quot;&gt;&lt;/a&gt;开场白&lt;/h2&gt;&lt;h3 id=&quot;为什么使用Markdown&quot;&gt;&lt;a href=&quot;#为什么使用Markdown&quot; class=&quot;headerlink&quot; ti
      
    
    </summary>
    
      <category term="实用" scheme="http://www.jmideas.cn/categories/%E5%AE%9E%E7%94%A8/"/>
    
    
      <category term="markdown" scheme="http://www.jmideas.cn/tags/markdown/"/>
    
      <category term="实用" scheme="http://www.jmideas.cn/tags/%E5%AE%9E%E7%94%A8/"/>
    
      <category term="写作" scheme="http://www.jmideas.cn/tags/%E5%86%99%E4%BD%9C/"/>
    
  </entry>
  
</feed>
